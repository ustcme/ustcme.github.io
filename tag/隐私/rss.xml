<?xml version="1.0"?>
<rss version="2.0">
    <channel>
        <title>Sakura • Posts by &#34;隐私&#34; tag</title>
        <link>https://sakurame.eu.org</link>
        <description>一个专注于技术和思考分享的博客</description>
        <language>zh-CN</language>
        <pubDate>Thu, 14 Mar 2024 00:19:19 +0800</pubDate>
        <lastBuildDate>Thu, 14 Mar 2024 00:19:19 +0800</lastBuildDate>
        <category>张量可视化</category>
        <category>Hyperstreamline</category>
        <category>Unix</category>
        <category>连通性分析</category>
        <category>油藏工程</category>
        <category>人工智能</category>
        <category>深度学习</category>
        <category>雅思</category>
        <category>建站</category>
        <category>翻译</category>
        <category>PMBOK</category>
        <category>图形学</category>
        <category>游戏引擎</category>
        <category>PBRT</category>
        <category>隐私</category>
        <category>PGP</category>
        <category>Secure Boot</category>
        <category>随笔</category>
        <category>感悟</category>
        <category>总结</category>
        <category>思辨</category>
        <category>PT</category>
        <category>板砖美学</category>
        <category>压制技术</category>
        <category>视频压制技术系列教程</category>
        <item>
            <guid isPermalink="true">https://sakurame.eu.org/2024/03/14/privacy/Canokey%E4%B8%8D%E5%AE%8C%E5%85%A8%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97-%E6%8C%81%E7%BB%AD%E8%B8%A9%E5%9D%91%E4%B8%AD/</guid>
            <title>Canokey不完全食用指南--持续踩坑中</title>
            <link>https://sakurame.eu.org/2024/03/14/privacy/Canokey%E4%B8%8D%E5%AE%8C%E5%85%A8%E9%A3%9F%E7%94%A8%E6%8C%87%E5%8D%97-%E6%8C%81%E7%BB%AD%E8%B8%A9%E5%9D%91%E4%B8%AD/</link>
            <category>隐私</category>
            <pubDate>Thu, 14 Mar 2024 00:19:19 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;居然在 2024 年收到了 Canokey Pigeon，这很不鸽子。折腾了几个小时，把几个主要的用法都试了一遍，包括 OTP， FIDO2，OpenPGP Smartcard 和 PIV。除了 Windows 下 PIV 无法使用  &lt;code&gt;NIST P-256/P-384&lt;/code&gt;  算法，以及某些 OpenPGP 最新的特性还未支持，整体算是物美价廉。&lt;/p&gt;
&lt;p&gt;本指南&lt;strong&gt;基于 Windows 10 Powershell&lt;/strong&gt;，其它操作系统基本也可参考使用。虽然本文基于 Canokey Pigeon，但大部分内容均可适用于其他硬件密钥，包括但不限于 Yubikey，Feitian key 等。同时本文的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lZGl0c3QuY29tLzIwMjIvY2Fub2tleS1ndWlkZS8jT3BlblBHUA==&#34;&gt;OpenPGP 部分&lt;/span&gt;也可单独作为比较完善的 PGP 使用指南来参考，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lZGl0c3QuY29tLzIwMjIvY2Fub2tleS1ndWlkZS8jUElW&#34;&gt;PIV 部分&lt;/span&gt;基本可以说是目前最完整的中文使用指南。&lt;/p&gt;
&lt;h2 id=&#34;基础配置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#基础配置&#34;&gt;#&lt;/a&gt; 基础配置&lt;/h2&gt;
&lt;p&gt;拿到后插入电脑会自动弹出 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLmNhbm9rZXlzLm9yZw==&#34;&gt;Canokey Web Console&lt;/span&gt; 提示，也可通过自行访问，注意&lt;strong&gt;目前只支持 Chromium 内核浏览器&lt;/strong&gt;，点击右上角连接，如果失败请尝试重新插拔后等待一会重试。&lt;/p&gt;
&lt;p&gt;连接成功后会显示 Canokey 的信息，首先进入  &lt;code&gt;Settings&lt;/code&gt;  设置全局的  &lt;code&gt;Admin PIN&lt;/code&gt; （默认  &lt;code&gt;123456&lt;/code&gt; ） &lt;strong&gt;并牢记&lt;/strong&gt;，同时可以配置部分选项，个人建议把  &lt;code&gt;WebUSB prompt enabled&lt;/code&gt;  关闭，有些烦人。&lt;/p&gt;
&lt;p&gt;注意这里的  &lt;code&gt;Admin PIN&lt;/code&gt;  &lt;strong&gt;只用于&lt;/strong&gt; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLmNhbm9rZXlzLm9yZw==&#34;&gt;Canokey Web Console&lt;/span&gt; 的  &lt;code&gt;Settings&lt;/code&gt; ，与下方所有  &lt;code&gt;PIN&lt;/code&gt;  均无关，请勿混淆，如觉得麻烦也可跳过这一步。&lt;/p&gt;
&lt;h2 id=&#34;otp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#otp&#34;&gt;#&lt;/a&gt; OTP&lt;/h2&gt;
&lt;p&gt;One-time Password (OTP) 是最常见的二步验证方法，主要分为 HMAC-based One-time Password algorithm (HOTP) 和 Time-based One-time Password  (TOTP)，由于绝大部分平台支持的都是后者，本文仅介绍 TOTP。当然国内平台爱用的短信验证码也算一种  OTP，但是这种方法有其缺陷，并不自主可控。&lt;/p&gt;
&lt;p&gt;如果那你使用过 Google Authenticator 之类的软件，那你一定对 TOTP 不陌生，其最常见的形式是一个有着 30 秒倒计时的六位数字，本质上是基于一个预共享的密钥和当前时间计算出的验证码。&lt;/p&gt;
&lt;p&gt;通常网站会给出一个二维码让我们扫描，其内容一般如下&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;otpauth:&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;totp/Example:alice@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com?secret=JBSWY3DPEHPK3PXP&amp;amp;issuer=Example&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;在 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLmNhbm9rZXlzLm9yZw==&#34;&gt;Canokey Web Console&lt;/span&gt; 的 TOTP/HTOP 部分添加，重要的是  &lt;code&gt;secret&lt;/code&gt;  参数，也就是密钥。部分网站可能会直接给出一个密钥，同样添加即可。Canokey 最多支持存储 128 个密钥，反正我是用不完。还可以通过  Yubico Authenticator 来管理和读取 OTP，可能需要到设置中指定 custom reader 为 canokey。&lt;/p&gt;
&lt;h2 id=&#34;fido2&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#fido2&#34;&gt;#&lt;/a&gt; FIDO2&lt;/h2&gt;
&lt;p&gt;首先引用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9mbHloaWdoZXIudG9wL2RldmVsb3AvMjE2MC5odG1s&#34;&gt;谈谈 WebAuthn&lt;/span&gt; 的一段的介绍：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;FIDO2 标准主要包括四个部分，其一是用于网站和访客设备交互的 WebAuthn，而 Client to Authenticator  Protocol 2（CTAP2，客户端 - 认证器协议）作为 WebAuthn  的补充，则是用于访客的设备和认证器交互的协议。标准的其他两个部分则是 U2F 和 UAF 规范。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;实际上这部分的使用是最简单的，只需要在支持的网站或应用中添加硬件密钥即可，目前大部分是用作 2FA，我自己常用的包括 GitHub,  Cloudflare, Microsoft, Google, Twitter, Facebook 等，更多支持 FIDO2/U2F/TOTP  的网站可以参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly8yZmEuZGlyZWN0b3J5L2ludC8=&#34;&gt;2FA Directory&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;注意部分网站添加时会首先弹出含有  &lt;code&gt;Windows Hello&lt;/code&gt;  的选项，需要&lt;strong&gt;点击取消&lt;/strong&gt;跳过，再添加硬件密钥。首次添加时需要自定义  &lt;code&gt;PIN&lt;/code&gt; ，牢记即可。&lt;/p&gt;
&lt;p&gt;目前 Microsoft 账户支持使用硬件密钥实现单因素登录，即无需密码直接登录，可以进入账户的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hY2NvdW50LmxpdmUuY29tL3Byb29mcy9tYW5hZ2UvYWRkaXRpb25hbA==&#34;&gt;其他安全选项&lt;/span&gt;部分进行添加。&lt;/p&gt;
&lt;h2 id=&#34;openpgp&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openpgp&#34;&gt;#&lt;/a&gt; OpenPGP&lt;/h2&gt;
&lt;p&gt;这部分可以算是 Canokey 最主要的应用场景，关于 OpenPGP 的具体介绍就不在这里展开了，可以参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bHljLmdpdGh1Yi5pby8yMDIxLzAxLzEzLzIwMjElRTUlQjklQjQtJUU3JTk0JUE4JUU2JTlCJUI0JUU3JThFJUIwJUU0JUJCJUEzJUU3JTlBJTg0JUU2JTk2JUI5JUU2JUIzJTk1JUU0JUJEJUJGJUU3JTk0JUE4UEdQLSVFNCVCOCU4QS8=&#34;&gt;2021 年，用更现代的方法使用 PGP&lt;/span&gt; 系列文章。下面完整记录一下配置流程。&lt;/p&gt;
&lt;p&gt;注意&lt;strong&gt;以下操作全部基于 Windows 10 Powershell，其它系统可能存在细微差异&lt;/strong&gt;。为保护私钥安全，建议全程在&lt;strong&gt;离线、一次性环境中&lt;/strong&gt;完成。&lt;/p&gt;
&lt;h3 id=&#34;安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#安装&#34;&gt;#&lt;/a&gt; 安装&lt;/h3&gt;
&lt;p&gt;Windows 用户可下载 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ncGc0d2luLm9yZy9kb3dubG9hZC5odG1s&#34;&gt;Gpg4Win&lt;/span&gt;，Linux/macOS 用户使用对应包管理软件安装即可。&lt;/p&gt;
&lt;h3 id=&#34;生成主密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生成主密钥&#34;&gt;#&lt;/a&gt; 生成主密钥&lt;/h3&gt;
&lt;p&gt;首先生成主密钥，注意以下全部密钥均为一次性示例，并非本人 PGP 密钥。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;expert &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;full-gen-key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;GnuPG&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;4&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; Copyright &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 2021 g10 Code GmbH&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;This is free software: you are free to change and redistribute it&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;There is NO WARRANTY&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; to the extent permitted by law&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please &lt;span class=&#34;token function&#34;&gt;select&lt;/span&gt; what kind of key you want:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; RSA and RSA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; DSA and Elgamal&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; DSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sign only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; RSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sign only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;7&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; DSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt; your own capabilities&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;8&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; RSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt; your own capabilities&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;9&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ECC &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sign and encrypt&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;default*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;10&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ECC &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sign only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;11&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ECC &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt; your own capabilities&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;13&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Existing key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;14&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Existing key &lt;span class=&#34;token keyword&#34;&gt;from&lt;/span&gt; card&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? 11&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 推荐使用 ECC 算法&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Possible actions &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; this ECC key: Sign Certify Authenticate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Current allowed actions: Sign Certify&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;S&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Toggle the sign capability&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Toggle the authenticate capability&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Finished&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? s&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 主密钥只保留 Certify 功能，其他功能使用子密钥&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Possible actions &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; this ECC key: Sign Certify Authenticate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Current allowed actions: Certify&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;S&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Toggle the sign capability&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Toggle the authenticate capability&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Finished&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please &lt;span class=&#34;token function&#34;&gt;select&lt;/span&gt; which elliptic curve you want:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Curve 25519 &lt;span class=&#34;token operator&#34;&gt;*&lt;/span&gt;default*&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Curve 448&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; NIST P-256&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;4&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; NIST P-384&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;5&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; NIST P-521&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;6&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Brainpool P-256&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;7&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Brainpool P-384&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;8&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Brainpool P-512&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;9&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; secp256k1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please specify how long the key should be valid&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         0 = key does not expire&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;57&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &amp;lt;n&gt;  = key expires in n days&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;58&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &amp;lt;n&gt;w = key expires in n weeks&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;59&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &amp;lt;n&gt;m = key expires in n months&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;60&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &amp;lt;n&gt;y = key expires in n years&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;61&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Key is valid &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt;? &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;0&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;62&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Key does not expire at all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;63&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Is this correct? &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y/N&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;64&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;65&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 主密钥永不过期即可&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;66&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;67&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Real name: Editst&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;68&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Email address: editst@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;69&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Comment:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;70&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;You selected this USER-ID:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;71&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Editst &amp;lt;editst@example.com&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;72&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;73&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 这里按实际情况填写，注意保护自己的隐私&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;74&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;75&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Change &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;ame&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;omment&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;E&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;mail or &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;O&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;kay/&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;uit? o&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;76&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;77&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;We need to generate a lot of random bytes&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; It is a good idea to perform&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;78&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;some other action &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;type&lt;/span&gt; on the keyboard&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;move&lt;/span&gt; the mouse&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; utilize the&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;79&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;disks&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; during the prime generation&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; this gives the random number&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;80&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;generator a better chance to gain enough entropy&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;81&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;82&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# Windnows 下会弹出窗口输入密码，注意一定要保管好！！！&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;83&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;84&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg: revocation certificate stored as &lt;span class=&#34;token string&#34;&gt;&#39;C:\\Users\\XXX\\AppData\\Roaming\\gnupg\\openpgp-revocs.d\\68697537A54B1F0BFC05E1D9787E848E1A98D086.rev&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;85&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;public and secret key created and signed&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;86&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;87&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 会自动生成吊销证书，注意保存到安全的地方&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;88&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;89&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pub   ed25519/787E848E1A98D086 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[C]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;90&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = 6869 7537 A54B 1F0B FC05  E1D9 787E 848E 1A98 D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;91&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uid                              Editst &amp;lt;editst@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;生成子密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生成子密钥&#34;&gt;#&lt;/a&gt; 生成子密钥&lt;/h3&gt;
&lt;p&gt;查看目前的私钥，可以发现只有一个用作  &lt;code&gt;Certify&lt;/code&gt;  的主密钥。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;fingerprint &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;keyid-format long &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;K&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;C:\Users\XXX\AppData\Roaming\gnupg\pubring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kbx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec   ed25519/787E848E1A98D086 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[C]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = 6869 7537 A54B 1F0B FC05  E1D9 787E 848E 1A98 D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uid                 &lt;span class=&#34;token namespace&#34;&gt;[ultimate]&lt;/span&gt; Editst &amp;lt;editst@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;下面生成不同功能的子密钥，其中  &lt;code&gt;&amp;lt;fingerprint&amp;gt;&lt;/code&gt;  为上面输出的密钥指纹，本示例中即为  &lt;code&gt;68697537A54B1F0BFC05E1D9787E848E1A98D086&lt;/code&gt; 。最后的  &lt;code&gt;2y&lt;/code&gt;  为密钥过期时间，可自行设置，如不填写默认永不过期。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;quick-&lt;span class=&#34;token function&#34;&gt;add-key&lt;/span&gt; &amp;lt;fingerprint&gt; cv25519 encr 2y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;quick-&lt;span class=&#34;token function&#34;&gt;add-key&lt;/span&gt; &amp;lt;fingerprint&gt; ed25519 auth 2y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;quick-&lt;span class=&#34;token function&#34;&gt;add-key&lt;/span&gt; &amp;lt;fingerprint&gt; ed25519 sign 2y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;再次查看目前的私钥，可以看到已经包含了这三个子密钥。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;fingerprint &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;keyid-format long &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;K&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;C:\Users\XXX\AppData\Roaming\gnupg\pubring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kbx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec   ed25519/787E848E1A98D086 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[C]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = 6869 7537 A54B 1F0B FC05  E1D9 787E 848E 1A98 D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uid                 &lt;span class=&#34;token namespace&#34;&gt;[ultimate]&lt;/span&gt; Editst &amp;lt;editst@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb   ed25519/055917609C9C0D7B 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[S]&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;[expires: 2024-01-01]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = E99F 3D15 7ACF 7E24 3DC8  FFE7 0559 1760 9C9C 0D7B&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb   ed25519/05F4A6C335157258 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[A]&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;[expires: 2024-01-01]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = C4B9 7EEC 4060 F856 7A4D  2956 05F4 A6C3 3515 7258&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb   cv25519/C5B8214C3AD21C6C 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[E]&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;[expires: 2024-01-01]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = E39E E067 3233 BD73 7ED1  15F1 C5B8 214C 3AD2 1C6C&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;上面生成了三种功能的子密钥（ssb），分别为加密（E）、认证（A）、签名（S），对应  &lt;code&gt;OpenPGP Applet&lt;/code&gt;  中的三个插槽。由于  &lt;code&gt;ECC&lt;/code&gt;  实现的原因，加密密钥的算法区别于其他密钥的算法。&lt;/p&gt;
&lt;p&gt;加密密钥用于加密文件和信息。签名密钥主要用于给自己的信息签名，保证这真的是来自&lt;strong&gt;我&lt;/strong&gt;的信息。认证密钥主要用于 SSH 登录。&lt;/p&gt;
&lt;h3 id=&#34;uid-设置&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#uid-设置&#34;&gt;#&lt;/a&gt; UID 设置&lt;/h3&gt;
&lt;p&gt;额外提醒，如果你想把这个密钥用于 Git Commit 的签名，同时提交到 GitHub，GitLab 等服务，请确保  &lt;code&gt;UID&lt;/code&gt;  信息  &lt;code&gt;Editst &amp;lt;editst@example.com&amp;gt;&lt;/code&gt;  与你的本地 Git 邮箱以及 GitHub 已验证邮箱一致。&lt;/p&gt;
&lt;p&gt;也可以单独添加 Git 使用的  &lt;code&gt;UID&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;quick-&lt;span class=&#34;token function&#34;&gt;add-uid&lt;/span&gt; &amp;lt;fingerprint&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Editst &amp;lt;editst.github@example.com&gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;gpg 会把你最近添加的  &lt;code&gt;UID&lt;/code&gt;  作为主  &lt;code&gt;UID&lt;/code&gt; ，你也可以手动指定。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;quick-&lt;span class=&#34;token function&#34;&gt;set-primary&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;uid &amp;lt;fingerprint&gt; &lt;span class=&#34;token string&#34;&gt;&#39;Editst &amp;lt;editst@example.com&gt;&#39;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;备份&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#备份&#34;&gt;#&lt;/a&gt; 备份&lt;/h3&gt;
&lt;p&gt;首先导出公钥。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ao public-key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pub &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;export 787E848E1A98D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后分别导出各个私钥，请务必备份好，&lt;strong&gt;特别是主密钥和吊销证书&lt;/strong&gt;，建议多介质异地备份。同时记得备份之前自动生成的吊销证书： &lt;code&gt;%APPDATA%\gnupg\openpgp-revocs.d\68697537A54B1F0BFC05E1D9787E848E1A98D086.rev&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;注意  &lt;code&gt;key id&lt;/code&gt;  后面的  &lt;code&gt;!&lt;/code&gt; ，表示只导出这一个私钥，若没有的话默认导出全部私钥。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ao sec-key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asc &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;export-secret&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;key 787E848E1A98D086!&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 主密钥，请务必保存好！！！&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ao sign-key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asc &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;export-secret&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;key 055917609C9C0D7B!&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ao auth-key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asc &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;export-secret&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;key 05F4A6C335157258!&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;ao encr-key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;asc &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;export-secret&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;key C5B8214C3AD21C6C!&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;具体备份策略可以参照 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bHljLmdpdGh1Yi5pby8yMDIxLzAxLzE4LzIwMjElRTUlQjklQjQtJUU3JTk0JUE4JUU2JTlCJUI0JUU3JThFJUIwJUU0JUJCJUEzJUU3JTlBJTg0JUU2JTk2JUI5JUU2JUIzJTk1JUU0JUJEJUJGJUU3JTk0JUE4UEdQLSVFNCVCOCVBRC8=&#34;&gt;2021 年，用更现代的方法使用 PGP（中）&lt;/span&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;主密钥只保留一份，建议备份在一个全盘加密的 U 盘中，然后放在一个绝对安全的地方。&lt;/li&gt;
&lt;li&gt;子密钥可以复制多份，通过 U 盘导入各个设备，专密专用，日常使用推荐用智能卡（比如 Yubikey），还能免去每次输密码的麻烦&lt;/li&gt;
&lt;li&gt;撤销凭证可以和主密钥放在一起备份一份， 另外单独备份一份（这样丢失密钥，起码还可以撤销）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面介绍配合智能卡使用子密钥&lt;/p&gt;
&lt;h3 id=&#34;导入-canokey&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#导入-canokey&#34;&gt;#&lt;/a&gt; 导入 Canokey&lt;/h3&gt;
&lt;p&gt;首先修改  &lt;code&gt;OpenPGP Applet&lt;/code&gt;  的密码&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;edit-card&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Reader &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: canokeys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;org OpenPGP PIV OATH 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Application ID &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: xxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Application &lt;span class=&#34;token function&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: OpenPGP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Version &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: 3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Manufacturer &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: CanoKeys&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Serial number &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Signature PIN &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: forced&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Key attributes &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: rsa2048 rsa2048 rsa2048&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Max&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; PIN lengths &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: 64 64 64&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PIN retry counter : 3 0 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Signature counter : 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;UIF setting &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: Sign=off Decrypt=off Auth=off&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Signature key &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: &lt;span class=&#34;token namespace&#34;&gt;[none]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Encryption key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: &lt;span class=&#34;token namespace&#34;&gt;[none]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Authentication key: &lt;span class=&#34;token namespace&#34;&gt;[none]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;General key info&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: &lt;span class=&#34;token namespace&#34;&gt;[none]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 进入 Admin 模式&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg/card&gt; admin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Admin commands are allowed&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg/card&gt; passwd&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg: OpenPGP card no&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; xxxxxxxxxxxxxxxxxxxxxxxxxxx detected&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;1 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; change PIN&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;2 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; unblock PIN&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;3 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; change Admin PIN&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;4 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;set&lt;/span&gt; the Reset Code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Q &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt; quit&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;分别设置  &lt;code&gt;PIN&lt;/code&gt; （默认  &lt;code&gt;123456&lt;/code&gt; ） 和  &lt;code&gt;Admin PIN&lt;/code&gt; （默认  &lt;code&gt;12345678&lt;/code&gt; ），注意牢记，忘记后只能重置  &lt;code&gt;OpenPGP Applet&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;之后把各个子密钥导入对应插槽，请注意，这步是&lt;strong&gt;不可逆&lt;/strong&gt;的，一但私钥导入智能卡并保存，&lt;strong&gt;本地私钥会被删除&lt;/strong&gt;，无法再次恢复，因此务必确认已经正确完善备份。&lt;/p&gt;
&lt;p&gt;如果你使用了多个 Canokey，想同时向其中导入子密钥，请注意最后一步&lt;strong&gt;不要保存&lt;/strong&gt;，直接强行退出，然后更换另一枚 Canokey 或其他智能卡，重复操作即可。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;edit-key&lt;/span&gt; 787E848E1A98D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;GnuPG&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 2&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;4&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; Copyright &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 2021 g10 Code GmbH&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;This is free software: you are free to change and redistribute it&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;There is NO WARRANTY&lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; to the extent permitted by law&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Secret key is available&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec  ed25519/787E848E1A98D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: 2022-01-01  expires: never       usage: C&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     trust: ultimate      validity: ultimate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb  ed25519/055917609C9C0D7B&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: 2022-01-01  expires: 2024-01-01  usage: S&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb  ed25519/05F4A6C335157258&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: 2022-01-01  expires: 2024-01-01  usage: A&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb  cv25519/C5B8214C3AD21C6C&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: 2022-01-01  expires: 2024-01-01  usage: E&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token namespace&#34;&gt;[ultimate]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; Editst &amp;lt;editst@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; key 1 &lt;span class=&#34;token comment&#34;&gt;# 首先选中第一个子密钥&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; keytocard&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please &lt;span class=&#34;token function&#34;&gt;select&lt;/span&gt; where to store the key:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;1&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Signature key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Authentication key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? 1 &lt;span class=&#34;token comment&#34;&gt;# 选择对应插槽&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 首先输入 OpenPGP 的密码，再输入 OpenPGP Applet 对应的 Admin PIN&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 之后先反选 key 1，再依次选择 key 2，key 3，重复操作即可&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; key 1&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; key 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; keytocard&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please &lt;span class=&#34;token function&#34;&gt;select&lt;/span&gt; where to store the key:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;3&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Authentication key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; key 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; key 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; keytocard&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please &lt;span class=&#34;token function&#34;&gt;select&lt;/span&gt; where to store the key:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;2&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Encryption key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? 2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&gt; save &lt;span class=&#34;token comment&#34;&gt;# 保存修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这时再次查看 Canokey 状态，确认导入成功。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;card-status&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Reader &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: canokeys&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;org OpenPGP PIV OATH 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Application ID &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: xxxxxxxxxxxxxxxxxxxxxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Application &lt;span class=&#34;token function&#34;&gt;type&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: OpenPGP&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Version &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: 3&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;4&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Manufacturer &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: CanoKeys&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Serial number &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Signature PIN &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: forced&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Key attributes &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: rsa2048 rsa2048 rsa2048&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Max&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; PIN lengths &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: 64 64 64&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;PIN retry counter : 3 0 3&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Signature counter : 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;UIF setting &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: Sign=off Decrypt=off Auth=off&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Signature key &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: E99F 3D15 7ACF 7E24 3DC8  FFE7 0559 1760 9C9C 0D7B&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      created &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: 2022-01-01 13:09:11&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Encryption key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: E39E E067 3233 BD73 7ED1  15F1 C5B8 214C 3AD2 1C6C&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      created &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: 2022-01-01 13:09:32&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Authentication key: C4B9 7EEC 4060 F856 7A4D  2956 05F4 A6C3 3515 7258&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      created &lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: 2022-01-01 13:09:49&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;General key info&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;: sub  ed25519/055917609C9C0D7B 2022-01-01 Editst &amp;lt;editst@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec   ed25519/787E848E1A98D086  created: 2022-01-01  expires: never&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb&gt;  cv25519/055917609C9C0D7B  created: 2022-01-01  expires: 2024-01-01&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                card-no: F1D0 xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb&gt;  ed25519/05F4A6C335157258  created: 2022-01-01  expires: 2024-01-01&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                card-no: F1D0 xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb&gt;  ed25519/C5B8214C3AD21C6C  created: 2022-01-01  expires: 2024-01-01&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;                                card-no: F1D0 xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;可以看到此时子密钥标识符为  &lt;code&gt;ssb&amp;gt;&lt;/code&gt; ，表示本地只有一个指向  &lt;code&gt;card-no: F1D0 xxxxxxxx&lt;/code&gt;  智能卡的指针，已不存在私钥。现在可以删除掉主密钥了，请&lt;strong&gt;再次确认你已安全备份好主密钥&lt;/strong&gt;。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;delete-secret-keys 787E848E1A98D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;为确保安全，也可直接删除 gpg 的工作目录： &lt;code&gt;%APPDATA%\gnupg&lt;/code&gt; ，Linux/macOS:  &lt;code&gt;~/.gunpg&lt;/code&gt; 。&lt;/p&gt;
&lt;h3 id=&#34;使用-canokey&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用-canokey&#34;&gt;#&lt;/a&gt; 使用 Canokey&lt;/h3&gt;
&lt;p&gt;此时切换回日常使用的环境，首先导入公钥&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;import public-key&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pub&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后设置子密钥指向 Canokey&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token function&#34;&gt;edit-card&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg/card&gt; fetch&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此时查看本地的私钥，可以看到已经指向了 Canokey&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;fingerprint &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;keyid-format long &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;K&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;C:\Users\XXX\AppData\Roaming\gnupg\pubring&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;kbx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec&lt;span class=&#34;token comment&#34;&gt;#  ed25519/787E848E1A98D086 2022-01-01 [C]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = 6869 7537 A54B 1F0B FC05  E1D9 787E 848E 1A98 D086&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uid                 &lt;span class=&#34;token namespace&#34;&gt;[ultimate]&lt;/span&gt; Editst &amp;lt;editst@example&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;com&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb&gt;  ed25519/055917609C9C0D7B 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[S]&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;[expires: 2024-01-01]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = E99F 3D15 7ACF 7E24 3DC8  FFE7 0559 1760 9C9C 0D7B&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Card serial no&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; = F1D0 xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb&gt;  ed25519/05F4A6C335157258 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[A]&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;[expires: 2024-01-01]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = C4B9 7EEC 4060 F856 7A4D  2956 05F4 A6C3 3515 7258&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Card serial no&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; = F1D0 xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb&gt;  cv25519/C5B8214C3AD21C6C 2022-01-01 &lt;span class=&#34;token namespace&#34;&gt;[E]&lt;/span&gt; &lt;span class=&#34;token namespace&#34;&gt;[expires: 2024-01-01]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Key fingerprint = E39E E067 3233 BD73 7ED1  15F1 C5B8 214C 3AD2 1C6C&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      Card serial no&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt; = F1D0 xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;之后可以使用 gpg 进一步配置 Canokey，可以设置  &lt;code&gt;name&lt;/code&gt; ， &lt;code&gt;forcesig&lt;/code&gt;  等内容，同时可前往 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLmNhbm9rZXlzLm9yZw==&#34;&gt;Canokey Web Console&lt;/span&gt;  &lt;code&gt;Touch Policy&lt;/code&gt;  配置每次使用时是否需要触摸以及缓存时间等。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;card-edit&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg/card&gt; admin&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Admin commands are allowed&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg/card&gt; help&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;quit           quit this menu&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;admin          show admin commands&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;help           show this help&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;list           list all available &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;name           change card holder&lt;span class=&#34;token string&#34;&gt;&#39;s name&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;url            change URL to retrieve key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;fetch          fetch the key specified in the card URL&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;login          change the login name&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;lang           change the language preferences&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;salutation     change card holder&#39;&lt;/span&gt;s salutation&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;cafpr          change a CA fingerprint&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;forcesig       toggle the signature force PIN flag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;generate       generate new keys&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;passwd         menu to change or unblock the PIN&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;verify         verify the PIN and list all &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;unblock        unblock the PIN &lt;span class=&#34;token keyword&#34;&gt;using&lt;/span&gt; a Reset Code&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;factory-reset  destroy all keys and &lt;span class=&#34;token keyword&#34;&gt;data&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;kdf-setup      setup KDF &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; PIN authentication &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;on/single/off&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;key-attr       change the key attribute&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;uif            change the User Interaction Flag&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果你使用了多个智能卡，切换后可能会因为私钥仍指向其他卡而出现问题，可以使用下面命令刷新  &lt;code&gt;Card serial no&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg-&lt;span class=&#34;token function&#34;&gt;connect-agent&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;scd serialno&#34;&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;learn --force&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;bye&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;git-commit-签名&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#git-commit-签名&#34;&gt;#&lt;/a&gt; Git Commit 签名&lt;/h3&gt;
&lt;p&gt;首先确保 Git 本地配置以及 GitHub 中的邮箱信息包含在  &lt;code&gt;UID&lt;/code&gt;  中，然后设置 Git 来指定使用子密钥中的签名（S）密钥。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;git config &lt;span class=&#34;token operator&#34;&gt;--&lt;/span&gt;global user&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;signingkey 055917609C9C0D7B&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;之后在  &lt;code&gt;git commit&lt;/code&gt;  时增加  &lt;code&gt;-S&lt;/code&gt;  参数即可使用 gpg 进行签名。也可在配置中设置自动 gpg 签名，此处不建议全局开启该选项，因为有的脚本可能会使用  &lt;code&gt;git am&lt;/code&gt;  之类的涉及到  &lt;code&gt;commit&lt;/code&gt;  的命令，如果全局开启的话会导致问题。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;git config commit&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;gpgsign true&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果提交到 GitHub，前往 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3NldHRpbmdzL2tleXM=&#34;&gt;GitHub SSH and GPG keys&lt;/span&gt; 添加公钥。此处添加后，可以直接通过对应 GitHub ID 来获取公钥： &lt;code&gt;https://github.com/&amp;lt;yourid&amp;gt;.gpg&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;ssh-with-gpg-agent&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssh-with-gpg-agent&#34;&gt;#&lt;/a&gt; SSH with gpg agent&lt;/h3&gt;
&lt;p&gt;新版 gpg（最低 2.4.0 版本，对应 Gpg4win 4.1.0 版本）的 gpg agent 已支持 Win32-OpenSSH，无需使用其他软件即可使用目前 Windows 自带的 SSH 客户端进行公钥认证登录，需要手动配置开启该功能。&lt;/p&gt;
&lt;p&gt;首先在  &lt;code&gt;%AppData%\gnupg\gpg-agent.conf&lt;/code&gt;  中写入一行：&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;enable-win32-openssh-support&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;然后运行  &lt;code&gt;gpg -k --with-keygrip&lt;/code&gt;  获取 [A] Subkey 的 Keygrip，写入  &lt;code&gt;%AppData%\gnupg\sshcontrol&lt;/code&gt; ，重启 gpg agent：&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg-&lt;span class=&#34;token function&#34;&gt;connect-agent&lt;/span&gt; killagent &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;bye&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg-&lt;span class=&#34;token function&#34;&gt;connect-agent&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;/&lt;/span&gt;bye&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;查看 openSSH 读取到的公钥信息，把输出的公钥信息添加到服务器的  &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssh-add &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;L&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssh-ed25519 AAAAC3NzaC1lZDI1NTE5AAAAIAzFAR5puWAj0OflZJVzAJqejVEZCap2NhFJbzedYwX2 cardno:F1D0 xxxxxxxx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此时连接  &lt;code&gt;ssh user@host&lt;/code&gt; ，会弹出提示输入  &lt;code&gt;PIN&lt;/code&gt;  的页面，如果  &lt;code&gt;Touch Policy&lt;/code&gt;  开启的话还需要触摸一下 Canokey，之后就可以连接到服务器了。&lt;/p&gt;
&lt;p&gt;最后在启动目录  &lt;code&gt;%AppData%\Microsoft\Windows\Start Menu\Programs\Startup&lt;/code&gt;  中增加一段 vbs 脚本，开机运行 gpg agent：&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Set&lt;/span&gt; WinScriptHost = CreateObject&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;WScript.Shell&#34;&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;WinScriptHost&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;Run Chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;34&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &amp;amp; &lt;span class=&#34;token string&#34;&gt;&#34;C:\Program Files (x86)\GnuPG\bin\gpg-connect-agent.exe&#34;&lt;/span&gt; &amp;amp; Chr&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;34&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &amp;amp; &lt;span class=&#34;token string&#34;&gt;&#34;/bye&#34;&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;,&lt;/span&gt; 0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;Set&lt;/span&gt; WinScriptHost = Nothing&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;如果需要在 WSL/WSL2 或转发认证，可以进一步参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3J1cG9yLWdpdGh1Yi93aW4tZ3BnLWFnZW50L3JlbGVhc2Vz&#34;&gt;win-gpg-agent&lt;/span&gt; 的 GitHub 页面配置使用。&lt;/p&gt;
&lt;h2 id=&#34;piv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#piv&#34;&gt;#&lt;/a&gt; PIV&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;PIV Applet&lt;/code&gt;  包含多个插槽，具体信息可以参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXJzLnl1Ymljby5jb20vUElWL0ludHJvZHVjdGlvbi9DZXJ0aWZpY2F0ZV9zbG90cy5odG1s&#34;&gt;PIV certificate slots&lt;/span&gt;，前往 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9jb25zb2xlLmNhbm9rZXlzLm9yZw==&#34;&gt;Canokey Web Console&lt;/span&gt;，进入  &lt;code&gt;PIV&lt;/code&gt;  设置  &lt;code&gt;PIN&lt;/code&gt; （默认  &lt;code&gt;123456&lt;/code&gt; ）和  &lt;code&gt;Management Key&lt;/code&gt; （需要 24 Bytes，默认  &lt;code&gt;010203040506070801020304050607080102030405060708&lt;/code&gt; ）并牢记。&lt;/p&gt;
&lt;h3 id=&#34;生成证书&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#生成证书&#34;&gt;#&lt;/a&gt; 生成证书&lt;/h3&gt;
&lt;p&gt;下面介绍两种不同的方法，可以根据自身需求选择。&lt;/p&gt;
&lt;p&gt;注意，受限于内存大小，Canokey PIV 证书&lt;strong&gt;最大支持 1335 Bytes&lt;/strong&gt;，过大会导致无法导入 2022 年 6 月发售的 Canokey 据信已改进了这一问题，因本人目前不再持有 Canokey，无法测试。同时由于 Windows 系统的问题，Canokey PIV 目前只支持  &lt;code&gt;RSA2048&lt;/code&gt;  算法， &lt;code&gt;NIST P-256/P-384&lt;/code&gt;  算法生成的证书无法正常识别（没有 Canokey minidriver）。下面以  &lt;code&gt;RSA2048&lt;/code&gt;  作为示例。&lt;/p&gt;
&lt;h4 id=&#34;openssl&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#openssl&#34;&gt;#&lt;/a&gt; OpenSSL&lt;/h4&gt;
&lt;p&gt;首先安装生成  &lt;code&gt;RSA2048&lt;/code&gt;  私钥，然后使用 OpenSSL 生成证书&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssh-keygen &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;t rsa &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;b 2048 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;m PEM &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;f rsa2048&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pem&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;openssl req &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;new &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;key rsa2048&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pem &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;out editst&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csr&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;openssl x509 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;req &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;days 3650 &lt;span class=&#34;token operator&#34;&gt;-in&lt;/span&gt; editst&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;csr &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;signkey rsa2048&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pem &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;out editst&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;crt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;之后安装  &lt;code&gt;yubikey-manager&lt;/code&gt;  导入私钥和证书，目前  &lt;code&gt;ckman&lt;/code&gt;  =  &lt;code&gt;ykman&lt;/code&gt; ，这里使用  &lt;code&gt;9a&lt;/code&gt;  插槽&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;python &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;m pip install yubikey-manager&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ykman &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;r Canokey piv keys import 9a rsa2048&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pem&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ykman &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;r Canokey piv certificates import 9a editst&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;crt&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;还可以直接使用  &lt;code&gt;ykman&lt;/code&gt;  调用 Canokey 来生成私钥和证书，注意这样生成的私钥是无法导出的。也可以在导入私钥的情况下直接调用第二个命令，只生成证书。&lt;/p&gt;
&lt;p&gt;下面  &lt;code&gt;-d&lt;/code&gt;  参数为有效期，默认为 365 天， &lt;code&gt;-s&lt;/code&gt;  参数为  &lt;code&gt;Subject for the certificate&lt;/code&gt; ，必须传入，具体内容包括  &lt;code&gt;CN: CommonName, OU: OrganizationalUnit, O: Organization, L: Locality, S: StateOrProvinceName, C: CountryName&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ykman &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;r Canokey piv keys generate 9a rsa2048&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pub&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ykman &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;r Canokey piv certificates generate 9a rsa2048&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pub &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;s &lt;span class=&#34;token string&#34;&gt;&#34;CN=Editst, C=CN&#34;&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;d 3650&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;完成后重新插拔 Canokey，Windows 前往  &lt;code&gt;certmgr.msc&lt;/code&gt; ，在个人 - 证书中可以看到已经有了刚才生成的证书。&lt;/p&gt;
&lt;h4 id=&#34;certreq&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#certreq&#34;&gt;#&lt;/a&gt; certreq&lt;/h4&gt;
&lt;p&gt;在 Windows 环境下虽然没有自带的 OpenSSL 组件，但是提供了强大的  &lt;code&gt;certreq&lt;/code&gt;  组件来生成证书。下面直接给出参考的配置，可以自行修改，也可以前往 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm1pY3Jvc29mdC5jb20vZW4tdXMvd2luZG93cy1zZXJ2ZXIvYWRtaW5pc3RyYXRpb24vd2luZG93cy1jb21tYW5kcy9jZXJ0cmVxXzE=&#34;&gt;certreq docs&lt;/span&gt; 查看更详细地参数说明。&lt;/p&gt;
&lt;p&gt;其中  &lt;code&gt;Subject&lt;/code&gt;  具体内容包括  &lt;code&gt;CN: CommonName, OU: OrganizationalUnit, O: Organization, L: Locality, S: StateOrProvinceName, C: CountryName&lt;/code&gt; ，可以自行配置。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token namespace&#34;&gt;[NewRequest]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Subject = &lt;span class=&#34;token string&#34;&gt;&#34;CN=Editst&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;KeyLength = 2048&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Exportable = TRUE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;HashAlgorithm = SHA256&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;KeySpec = &lt;span class=&#34;token string&#34;&gt;&#34;AT_KEYEXCHANGE&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;KeyUsage = &lt;span class=&#34;token string&#34;&gt;&#34;CERT_KEY_ENCIPHERMENT_KEY_USAGE&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;KeyUsageProperty = &lt;span class=&#34;token string&#34;&gt;&#34;NCRYPT_ALLOW_DECRYPT_FLAG&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;RequestType = Cert&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ValidityPeriodUnits = 5&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ValidityPeriod = Years&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;SMIME = FALSE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;保存上面的配置文件到  &lt;code&gt;cert.ini&lt;/code&gt; ，之后使用 certreq 生成证书，注意这一步生成的  &lt;code&gt;cert_req.req&lt;/code&gt;  没啥用，直接删除即可&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;certreq &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;new cert&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;ini cert_req&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;req&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此时生成的证书已经自动安装在系统中，前往  &lt;code&gt;certmgr.msc&lt;/code&gt; ，在个人 - 证书中可以看到已经有了刚才生成的证书。右键选择&lt;strong&gt;所有任务 - 导出&lt;/strong&gt;，在导出向导中选择&lt;strong&gt;导出私钥&lt;/strong&gt;即可获得完整的证书和私钥文件  &lt;code&gt;cert.pfx&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;之后导入需要使用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kZXZlbG9wZXJzLnl1Ymljby5jb20veXViaWNvLXBpdi10b29sL1JlbGVhc2VzLw==&#34;&gt;yubikey-piv-tool&lt;/span&gt;，下载安装后手动添加程序路径到环境变量中： &lt;code&gt;C:\Program Files\Yubico\Yubico PIV Tool\bin&lt;/code&gt; ，之后把证书和私钥导入到 Canokrey&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;yubico-piv-tool &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;r Canokey &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;a &lt;span class=&#34;token function&#34;&gt;import-key&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;a &lt;span class=&#34;token function&#34;&gt;import-certificate&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;s 9e &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;K PKCS12 &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;k &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;i cert&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;pfx&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;需要首先输入导出证书时的密码，之后再输入  &lt;code&gt;Management Key&lt;/code&gt;&lt;/p&gt;
&lt;h3 id=&#34;ssh-with-piv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#ssh-with-piv&#34;&gt;#&lt;/a&gt; SSH with PIV&lt;/h3&gt;
&lt;p&gt;前往 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2J1cHRjenEvV2luQ3J5cHRTU0hBZ2VudA==&#34;&gt;WinCrypt SSH Agent&lt;/span&gt; 下载并运行，此时查看  &lt;code&gt;ssh-agent&lt;/code&gt;  读取到的公钥信息，把输出的公钥信息添加到服务器的  &lt;code&gt;~/.ssh/authorized_keys&lt;/code&gt;&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token variable&#34;&gt;$Env&lt;/span&gt;:SSH_AUTH_SOCK=&lt;span class=&#34;token string&#34;&gt;&#34;\\.\pipe\openssh-ssh-agent&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssh-add &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;L&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQCYSnYY1UFzct9qi7QGNsE9GRJXmsy7HNLxHHO0uxuZTKQUT2OHrCHwVoeahPZRGwOXqxiziR6MxMVwK8mmfpM/2iRwkJhiW4AmeAA5s3zeO9sdZTYRzb9njCaa7uqOER6fbgW99ctp2LwsKxG0z2TvBgh+fwum96APggozLbapfweiWbbmymJ4J60p7yP/5a8Uh9AABNijp3iCmpnydICuWLG4Vtj4vMJ4NGNH5POY7qU0lvBULEXMXaFRoZrv93VRaj0hw2GOtgd9IdB+edSmze/vjJ+eodk5tqjLATi2BxlvSKPHDb14a34b5JK5idMUwlRfOOvOA10nZ7+kZetX Editst&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;此时连接  &lt;code&gt;ssh user@host&lt;/code&gt; ，会弹出提示输入  &lt;code&gt;PIN&lt;/code&gt;  的页面，注意此时输入的是  &lt;code&gt;PIV Applet PIN&lt;/code&gt; ，输入后即可成功连接服务器。&lt;/p&gt;
&lt;p&gt;注意这种使用方法与 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lZGl0c3QuY29tLzIwMjIvY2Fub2tleS1ndWlkZS8jU1NILXdpdGgtZ3BnLWFnZW50&#34;&gt;SSH with gpg-agent&lt;/span&gt; 并不兼容，选择其中一种使用即可。&lt;/p&gt;
&lt;h3 id=&#34;bitlokcer-with-piv&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#bitlokcer-with-piv&#34;&gt;#&lt;/a&gt; BitLokcer with PIV&lt;/h3&gt;
&lt;p&gt;如果已经按照上一步生成了证书，需要修改注册表来允许自签名证书，在注册表  &lt;code&gt;HKEY_LOCAL_MACHINE\Software\Policies\Microsoft\FVE&lt;/code&gt;  下新建一个  &lt;code&gt;DWORD&lt;/code&gt;  的值，名称为  &lt;code&gt;SelfSignedCertificates&lt;/code&gt; ，数值数据为  &lt;code&gt;1&lt;/code&gt; 。&lt;/p&gt;
&lt;p&gt;或者直接保存下面的注册表配置文件为  &lt;code&gt;selfsig.reg&lt;/code&gt; ，然后导入。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Windows Registry Editor Version 5&lt;span class=&#34;token punctuation&#34;&gt;.&lt;/span&gt;00&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token namespace&#34;&gt;[HKEY_LOCAL_MACHINE\SOFTWARE\Policies\Microsoft\FVE]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token string&#34;&gt;&#34;SelfSignedCertificates&#34;&lt;/span&gt;=dword:00000001&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;注意，需要验证智能卡中&lt;strong&gt;存有证书对应的私钥&lt;/strong&gt;，否则会导致可以添加智能卡，但在解锁时失败。运行下面命令，确保输出信息中&lt;strong&gt;包含私钥验证测试通过&lt;/strong&gt;信息。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;certutil &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;scinfo&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token comment&#34;&gt;# 应含有下面输出&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;私钥验证&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Microsoft Smart Card Key Storage Provider: KeySpec=0&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;AES256+RSAES_OAEP&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;RSA:CNG&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; 测试通过&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;BitLocker 不要求证书具备 EKU 属性，但是如果已为证书配置了该属性，则必须将前往组策略&lt;strong&gt;计算机配置 - 管理模板 - Windows 组件 - BitLocker 驱动器加密&lt;/strong&gt;，设置&lt;strong&gt;验证智能卡证书使用合规性&lt;/strong&gt;为已启用，同时为 BitLocker 配置的对象标识符 (OID) 匹配的 OID。&lt;/p&gt;
&lt;p&gt;如果遇到其他问题请尝试执行下面命令，初始化  &lt;code&gt;Card Holder Unique Identifier&lt;/code&gt;  和  &lt;code&gt;CCC&lt;/code&gt; 。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ykman &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;r Canokey piv objects generate chuid&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ykman &lt;span class=&#34;token operator&#34;&gt;-&lt;/span&gt;r Canokey piv objects generate ccc&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;之后启用 BitLocker 时选择&lt;strong&gt;使用智能卡解锁驱动器&lt;/strong&gt;即可，对于已启用 BitLocker 的驱动器，也可以通过&lt;strong&gt;管理 BitLocker&lt;/strong&gt; 来添加智能卡。&lt;/p&gt;
&lt;p&gt;感谢你看到这里，如有任何问题欢迎留言或邮件联系  &lt;code&gt;mail@sakurame.eu.org&lt;/code&gt; ，或者尝试从下面链接中寻找答案。&lt;/p&gt;
&lt;h2 id=&#34;参考&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#参考&#34;&gt;#&lt;/a&gt; 参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;2021 年，用更现代的方法使用 PGP&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bHljLmdpdGh1Yi5pby8yMDIxLzAxLzEzLzIwMjElRTUlQjklQjQtJUU3JTk0JUE4JUU2JTlCJUI0JUU3JThFJUIwJUU0JUJCJUEzJUU3JTlBJTg0JUU2JTk2JUI5JUU2JUIzJTk1JUU0JUJEJUJGJUU3JTk0JUE4UEdQLSVFNCVCOCU4QS8=&#34;&gt;（上）&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bHljLmdpdGh1Yi5pby8yMDIxLzAxLzE4LzIwMjElRTUlQjklQjQtJUU3JTk0JUE4JUU2JTlCJUI0JUU3JThFJUIwJUU0JUJCJUEzJUU3JTlBJTg0JUU2JTk2JUI5JUU2JUIzJTk1JUU0JUJEJUJGJUU3JTk0JUE4UEdQLSVFNCVCOCVBRC8=&#34;&gt;（中）&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly91bHljLmdpdGh1Yi5pby8yMDIxLzAxLzI2LzIwMjElRTUlQjklQjQtJUU3JTk0JUE4JUU2JTlCJUI0JUU3JThFJUIwJUU0JUJCJUEzJUU3JTlBJTg0JUU2JTk2JUI5JUU2JUIzJTk1JUU0JUJEJUJGJUU3JTk0JUE4UEdQLSVFNCVCOCU4Qi8=&#34;&gt;（下）&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;用 PGP 保护代码完整性：
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTk1MjQtMS5odG1s&#34;&gt;（一）： 基本概念和工具&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTk1MjktMS1yZWwuaHRtbA==&#34;&gt;（二）：生成你的主密钥&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTk2MDctMS5odG1s&#34;&gt;（三）：生成 PGP 子密钥&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTEwNDAyLTEtcmVsLmh0bWw=&#34;&gt;（四）：将主密钥移到离线存储中&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTEwNDE1LTEuaHRtbA==&#34;&gt;（五）：将子密钥移到一个硬件设备中&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTEwNDIxLTEuaHRtbA==&#34;&gt;（六）：在 Git 上使用 PGP&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9saW51eC5jbi9hcnRpY2xlLTEwNDMyLTEuaHRtbA==&#34;&gt;（七）：保护在线帐户&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmNhbm9rZXlzLm9yZy91c2VyZ3VpZGUv&#34;&gt;Documentation for Canokey&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9pYW10d3ouZ2l0Ym9va3MuaW8veXViaWtleS1oYW5kYm9vay1jaGluZXNlL2NvbnRlbnQv&#34;&gt;Yubikey 使用手册&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYWIuamlua2FuLm9yZy8yMDIxLzA4LzAxL3VzaW5nLWdwZy1mb3Itc3NoLWF1dGhlbnRpY2F0aW9uLW9uLXdpbmRvd3MtMTAv&#34;&gt;在 Windows 10 上用 GPG 完成 SSH 认证&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tZWNoYW51cy5pby9rZS1uZW5nLXNoaS16dWktaGFvLWRlLXl1YmlrZXktZ3BnLXNzaC16aGktbmVuZy1xaWEtamlhby1jaGVuZy8=&#34;&gt;可能是最好的 Yubikey + GPG/SSH 智能卡教程&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9lZGl0c3QuY29tLzIwMjIvY2Fub2tleS1ndWlkZS8=&#34;&gt;Canokey 指南：OTP，FIDO2，PGP 与 PIV&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9oay52MmV4LmNvbS90LzYwNzQxOA==&#34;&gt;在 Windows 上愉快的使用 Yubikey 登录 SSH&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ud24ubW9lL3Bvc3RzL3l1YmlrZXktZXhhbXBsZXMvIyVFNCVCRCU5QyVFNCVCOCVCQSVFNSVBRiU4NiVFOSU5MiVBNSVFOCVCRiU5QiVFOCVBMSU4Q1NTSCVFOSVBQSU4QyVFOCVBRiU4MQ==&#34;&gt;应用 Yubikey 的 N 种方法&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0FzdGVyaXNNb25vL2Z0c2FmZS1rOXBsdXMtdXNlci1ndWlkZQ==&#34;&gt;ftsafe-k9plus-user-guide&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b3Rvcm8uaW5rL3l1YmlrZXktbW9yZS5odG1s&#34;&gt;YubiKey 与 BitLocker&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uYXRoYW5hZWxmcmV5LmNvbS8yMDIxLzAxLzA5L3NldHRpbmctdXAtYml0bG9ja2VyLXdpdGgteXViaWtleS1hcy1zbWFydC1jYXJkLw==&#34;&gt;Setting Up BitLocker with YubiKey as Smart Card&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://sakurame.eu.org/2023/06/09/privacy/the-pgp-problem/</guid>
            <title>the-pgp-problem</title>
            <link>https://sakurame.eu.org/2023/06/09/privacy/the-pgp-problem/</link>
            <category>隐私</category>
            <pubDate>Fri, 09 Jun 2023 15:37:50 +0800</pubDate>
            <description><![CDATA[ &lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYXRhY29yYS5taWNyby5ibG9nLw==&#34;&gt;Latacora&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;​		 		 			&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYXRhY29yYS5taWNyby5ibG9nL2Fib3V0Lw==&#34;&gt;About&lt;/span&gt; 		 	 		 			&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYXRhY29yYS5taWNyby5ibG9nL2FyY2hpdmUv&#34;&gt;Archive&lt;/span&gt;&lt;/p&gt;
&lt;h1 id=&#34;the-pgp-problem&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#the-pgp-problem&#34;&gt;#&lt;/a&gt; The PGP Problem&lt;/h1&gt;
&lt;p&gt;Jul 16, 2019&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNyeXB0b2dyYXBoeWVuZ2luZWVyaW5nLmNvbS8yMDE0LzA4LzEzL3doYXRzLW1hdHRlci13aXRoLXBncC8=&#34;&gt;Cryptography engineers have been tearing their hair out over PGP’s deficiencies&lt;/span&gt; for (literally) decades. When other kinds of engineers get wind of  this, they’re shocked. PGP is bad? Why do people keep telling me to use  PGP? The answer is that they shouldn’t be telling you that, because PGP  is bad and needs to go away.&lt;/p&gt;
&lt;p&gt;There are, as you’re about to see, lots of problems with PGP.  Fortunately, if you’re not morbidly curious, there’s a simple  meta-problem with it: it was designed in the 1990s, before serious  modern cryptography. No competent crypto engineer would design a system  that looked like PGP today, nor tolerate most of its defects in any  other design. Serious cryptographers have largely given up on PGP and  don’t spend much time publishing on it anymore (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudXNlbml4Lm9yZy9zeXN0ZW0vZmlsZXMvY29uZmVyZW5jZS91c2VuaXhzZWN1cml0eTE4L3NlYzE4LXBvZGRlYm5pYWsucGRm&#34;&gt;with a notable exception&lt;/span&gt;). Well-understood problems in PGP have gone unaddressed for over a decade because of this.&lt;/p&gt;
&lt;p&gt;Two quick notes: first, we wrote this for engineers, not lawyers and  activists. Second: “PGP” can mean a bunch of things, from the &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQ4ODA=&#34;&gt;OpenPGP standard&lt;/span&gt; to its reference implementation in GnuPG. We use the term “PGP” to cover all of these things.&lt;/p&gt;
&lt;h2 id=&#34;the-problems&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#the-problems&#34;&gt;#&lt;/a&gt; The Problems&lt;/h2&gt;
&lt;h3 id=&#34;absurd-complexity&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#absurd-complexity&#34;&gt;#&lt;/a&gt; Absurd Complexity&lt;/h3&gt;
&lt;p&gt;For reasons none of us here in the future understand, PGP has a  packet-based structure. A PGP message (in a “.asc” file) is an archive  of typed packets. There are &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQ4ODAjcGFnZS0xMw==&#34;&gt;at least 8 different ways&lt;/span&gt; of encoding the length of a packet, depending on whether you’re using  “new” or “old” format packets. The “new format” packets have  variable-length lengths, like BER (try to write a PGP implementation and you may wish for the sweet release of ASN.1). Packets can have  subpackets. There are overlapping variants of some packets. The most  recent keyserver attack happened because GnuPG &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aHJlYWRyZWFkZXJhcHAuY29tL3RocmVhZC8xMTQ3MTYyNTgzOTY5MDA5NjY0Lmh0bWw=&#34;&gt;accidentally went quadratic&lt;/span&gt; in parsing keys, which also follow this deranged format.&lt;/p&gt;
&lt;p&gt;That’s just the encoding. The actual system doesn’t get simpler.  There are keys and subkeys. Key IDs and key servers and key signatures.  Sign-only and encrypt-only. Multiple “key rings”. Revocation  certificates. Three different compression formats. This is all before we get to smartcard support.&lt;/p&gt;
&lt;h3 id=&#34;swiss-army-knife-design&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#swiss-army-knife-design&#34;&gt;#&lt;/a&gt; Swiss Army Knife Design&lt;/h3&gt;
&lt;p&gt;If you’re stranded in the woods and, I don’t know, need to repair  your jean cuffs, it’s handy if your utility knife has a pair of  scissors. But nobody who does serious work uses their multitool scissors regularly.&lt;/p&gt;
&lt;p&gt;A Swiss Army knife does a bunch of things, all of them poorly. PGP  does a mediocre job of signing things, a relatively poor job of  encrypting them with passwords, and a pretty bad job of encrypting them  with public keys. PGP is not an especially good way to securely transfer a file. It’s a clunky way to sign packages. It’s not great at  protecting backups. It’s a downright dangerous way to converse in secure messages.&lt;/p&gt;
&lt;p&gt;Back in the MC Hammer era from which PGP originates, “encryption” was its own special thing; there was one tool to send a file, or to back up a directory, and another tool to encrypt and sign a file. Modern  cryptography doesn’t work like this; it’s purpose built. Secure  messaging wants crypto that is different from secure backups or package  signing.&lt;/p&gt;
&lt;h3 id=&#34;mired-in-backwards-compatibility&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#mired-in-backwards-compatibility&#34;&gt;#&lt;/a&gt; Mired In Backwards Compatibility&lt;/h3&gt;
&lt;p&gt;PGP predates modern cryptography; there are Hanson albums that have  aged better. If you’re lucky, your local GnuPG defaults to 2048-bit RSA, the 64-bit-block CAST5 cipher in CFB, and the OpenPGP MDC checksum  (about which more later). If you encrypt with a password rather than  with a public key, the OpenPGP protocol specifies PGP’s S2K password  KDF. These are, to put it gently, not the primitives a cryptography  engineer would select for a modern system.&lt;/p&gt;
&lt;p&gt;We’ve learned a lot since Steve  Urkel graced the airwaves during  ABC’s TGIF: that you should authenticate your ciphertexts (and avoid CFB mode) would be an obvious example, but also that 64-bit block ciphers  are bad, that we can do much better than RSA, that mixing compression  and encryption is dangerous, and that KDFs should be both time- and  memory-hard.&lt;/p&gt;
&lt;p&gt;Whatever the OpenPGP RFCs may say, you’re probably not doing any of  these things if you’re using PGP, nor can you predict when you will.  Take AEAD ciphers: the Rust-language Sequoia PGP defaulted to the  AES-EAX AEAD mode, which is great, and nobody can read those messages  because most PGP installs don’t know what EAX mode is, which is not  great. Every well-known bad cryptosystem eventually sprouts an RFC  extension that supports curves or AEAD, so that its proponents can claim on message boards that they support modern cryptography. RFC’s don’t  matter: only the installed base does. We’ve understood authenticated  encryption for 2 decades, and PGP is old enough to buy me drinks; enough excuses.&lt;/p&gt;
&lt;p&gt;You can have backwards compatibility with the 1990s or you can have sound cryptography; &lt;em&gt;you can’t have both&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;obnoxious-ux&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#obnoxious-ux&#34;&gt;#&lt;/a&gt; Obnoxious UX&lt;/h3&gt;
&lt;p&gt;We can’t say this any better than Ted Unangst:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;There was a PGP usability study conducted a few years ago where a  group of technical people were placed in a room with a computer and  asked to set up PGP. Two hours later, they were never seen or heard from again.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;If you’d like empirical data of your own to back this up, here’s an  experiment you can run: find an immigration lawyer and talk them through the process of getting Signal working on their phone. You probably  don’t suddenly smell burning toast. Now try doing that with PGP.&lt;/p&gt;
&lt;h3 id=&#34;long-term-secrets&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#long-term-secrets&#34;&gt;#&lt;/a&gt; Long-Term Secrets&lt;/h3&gt;
&lt;p&gt;PGP begs users to keep a practically-forever root key tied to their  identity. It does this by making keys annoying to generate and exchange, by encouraging “key signing parties”, and by creating a “web of trust”  where keys depend on other keys.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmZpbGlwcG8uaW8vZ2l2aW5nLXVwLW9uLWxvbmctdGVybS1wZ3Av&#34;&gt;Long term keys are almost never what you want&lt;/span&gt;. If you keep using a key, it eventually gets exposed. You want the blast radius of a compromise to be as small as possible, and, just as  importantly, you don’t want users to hesitate even for a moment at the  thought of rolling a new key if there’s any concern at all about the  safety of their current key.&lt;/p&gt;
&lt;p&gt;The PGP cheering section will immediately reply “that’s why you keep  keys on a Yubikey”. To a decent first approximation, nobody in the whole world uses the expensive Yubikeys that do this, and you can’t imagine a future in which that changes (we can barely get U2F rolled out, and  those keys are disposable). We can’t accept bad cryptosystems just to  make Unix nerds feel better about their toys.&lt;/p&gt;
&lt;h3 id=&#34;broken-authentication&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#broken-authentication&#34;&gt;#&lt;/a&gt; Broken Authentication&lt;/h3&gt;
&lt;p&gt;More on PGP’s archaic primitives: way back in 2000, the OpenPGP  working group realized they needed to authenticate ciphertext, and that  PGP’s signatures weren’t accomplishing that. So OpenPGP invented &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQ4ODAjc2VjdGlvbi01LjE0&#34;&gt;the MDC system&lt;/span&gt;: PGP messages with MDCs attach a SHA-1 of the plaintext to the plaintext, which is then encrypted (as normal) in CFB mode.&lt;/p&gt;
&lt;p&gt;If you’re wondering how PGP gets away with this when modern systems  use relatively complex AEAD modes (why can’t everyone just tack a SHA-1  to their plaintext), you’re not alone. Where to start with this Rube  Goldberg contraption? The PGP MDC can be stripped off messages –– it was encoded in such a way that you can simply chop off the last 22 bytes of the ciphertext to do that. To retain backwards compatibility with  insecure older messages, PGP introduced a new packet type to signal that the MDC needs to be validated; if you use the wrong type, the MDC  doesn’t get checked. Even if you do, the new SEIP packet format is close enough to the insecure SE format that you can potentially trick readers into downgrading; &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tYWlsYXJjaGl2ZS5pZXRmLm9yZy9hcmNoL21zZy9vcGVucGdwL3RCMDB2TzVyLXFuZVg5d3oxeHozbmV0cFhWVQ==&#34;&gt;Trevor Perrin worked the SEIP out to 16 whole bits of security.&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;And, finally, even if everything goes right, the reference PGP  implementation will (wait for it) release unauthenticated plaintext to  callers, &lt;em&gt;even if the MDC doesn’t match&lt;/em&gt;.&lt;/p&gt;
&lt;h3 id=&#34;incoherent-identity&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#incoherent-identity&#34;&gt;#&lt;/a&gt; Incoherent Identity&lt;/h3&gt;
&lt;p&gt;PGP is an application. It’s a set of integrations with other  applications. It’s a file format. It’s also a social network, and a  subculture.&lt;/p&gt;
&lt;p&gt;PGP pushes notion of a cryptographic identity. You generate a key,  save it in your keyring, print its fingerprint on your business card,  and publish it to a keyserver. You sign other people’s keys. They in  turn may or may not rely on your signatures to verify other keys. Some  people go out of their way to meet other PGP users in person to exchange keys and more securely attach themselves to this “web of trust”. Other  people organize “key signing parties”. The image you’re conjuring in  your head of that accurately explains how hard it is to PGP’s devotees  to switch to newer stuff.&lt;/p&gt;
&lt;p&gt;None of this identity goop works. Not the key signing web of trust,  not the keyservers, not the parties. Ordinary people will trust anything that looks like a PGP key no matter where it came from – how could they not, when even an expert would have a hard time articulating how to  evaluate a key? Experts don’t trust keys they haven’t exchanged  personally. Everyone else relies on centralized authorities to  distribute keys. PGP’s key distribution mechanisms are theater.&lt;/p&gt;
&lt;h3 id=&#34;leaks-metadata&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#leaks-metadata&#34;&gt;#&lt;/a&gt; Leaks Metadata&lt;/h3&gt;
&lt;p&gt;Forget the email debacle for a second (we’ll get to that later). PGP  by itself leaks metadata. Messages are (in normal usage) linked directly to key identifiers, which are, throughout PGP’s cobweb of trust, linked to user identity. Further, a rather large fraction of PGP users make  use of keyservers, which can themselves leak to the network the  identities of which PGP users are communicating with each other.&lt;/p&gt;
&lt;h3 id=&#34;no-forward-secrecy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#no-forward-secrecy&#34;&gt;#&lt;/a&gt; No Forward Secrecy&lt;/h3&gt;
&lt;p&gt;A good example of that last problem: secure messaging crypto demands  forward secrecy. Forward secrecy means that if you lose your key to an  attacker today, they still can’t go back and read yesterday’s messages;  they had to be there with the key yesterday to read them. In modern  cryptography engineering, we assume our adversary is recording  everything, into infinite storage. PGP’s claimed adversaries include  world governments, many of whom are certainly doing exactly that.  Against serious adversaries and without forward secrecy, breaches are a  question of “when”, not “if”.&lt;/p&gt;
&lt;p&gt;To get forward secrecy in practice, you typically keep two secret  keys: a short term session key and a longer-term trusted key. The  session key is ephemeral (usually the product of a DH exchange) and the  trusted key signs it, so that a man-in-the-middle can’t swap their own  key in. It’s theoretically possible to achieve a facsimile of forward  secrecy using the tools PGP provides. Of course, pretty much nobody does this.&lt;/p&gt;
&lt;h3 id=&#34;clumsy-keys&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#clumsy-keys&#34;&gt;#&lt;/a&gt; Clumsy Keys&lt;/h3&gt;
&lt;p&gt;An OpenBSD signify(1) public key is a Base64 string short enough to  fit in the middle of a sentence in an email; the private key, which  isn’t an interchange format, is just a line or so longer. A PGP public  key is a whole giant Base64 document; if you’ve used them often, you’re  probably already in the habit of attaching them rather than pasting them into messages so they don’t get corrupted. Signify’s key is a  state-of-the-art Ed25519 key; PGP’s is a weaker RSA key.&lt;/p&gt;
&lt;p&gt;You might think this stuff doesn’t matter, but it matters a lot;  orders of magnitude more people use SSH and manage SSH keys than use  PGP. SSH keys are trivial to handle; PGP’s are not.&lt;/p&gt;
&lt;h3 id=&#34;negotiation&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#negotiation&#34;&gt;#&lt;/a&gt; Negotiation&lt;/h3&gt;
&lt;p&gt;PGP supports ElGamal. PGP supports RSA. PGP supports the NIST  P-Curves. PGP supports Brainpool. PGP supports Curve25519. PGP supports  SHA-1. PGP supports SHA-2. PGP supports RIPEMD160. PGP supports IDEA.  PGP supports 3DES. PGP supports CAST5. PGP supports AES. There is no way this is a complete list of what PGP supports.&lt;/p&gt;
&lt;p&gt;If we’ve learned 3 important things about cryptography design in the  last 20 years, at least 2 of them are that negotiation and compatibility are evil. The flaws in cryptosystems tend to appear in the joinery, not the lumber, and expansive crypto compatibility increases the amount of  joinery. Modern protocols like TLS 1.3 are jettisoning backwards  compatibility with things like RSA, not adding it. New systems support &lt;em&gt;just a single suite of primitives&lt;/em&gt;, and a simple version number. If one of those primitives fails, you bump the version and chuck the old protocol all at once.&lt;/p&gt;
&lt;p&gt;If we’re unlucky, and people are still using PGP 20 years from now,  PGP will be the only reason any code anywhere includes CAST5. We can’t  say this more clearly or often enough: you can have backwards  compatibility with the 1990s or you can have sound cryptography; you  can’t have both.&lt;/p&gt;
&lt;h3 id=&#34;janky-code&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#janky-code&#34;&gt;#&lt;/a&gt; Janky Code&lt;/h3&gt;
&lt;p&gt;The de facto standard implementation of PGP is GnuPG. GnuPG is not  carefully built. It’s a sprawling C-language codebase with duplicative  functionality (write-ups of the most recent SKS key parsing denial of  service noted that it has multiple key parsers, for instance) with a &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY3ZlZGV0YWlscy5jb20vdnVsbmVyYWJpbGl0eS1saXN0L3ZlbmRvcl9pZC00NzExL0dudXBnLmh0bWw=&#34;&gt;long track record of CVEs&lt;/span&gt; ranging from memory corruption to cryptographic side channels. It has  at times been possible to strip authenticators off messages without  GnuPG noticing. It’s been possible to feed it keys that don’t  fingerprint properly without it noticing. The 2018 Efail vulnerability  was a result of it releasing unauthenticated plaintext to callers. GnuPG is not good.&lt;/p&gt;
&lt;p&gt;GnuPG is also effectively the reference implementation for PGP, and  also the basis for most other tools that integrate PGP cryptography. It  isn’t going anywhere. To rely on PGP is to rely on GPG.&lt;/p&gt;
&lt;h2 id=&#34;the-answers&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#the-answers&#34;&gt;#&lt;/a&gt; The Answers&lt;/h2&gt;
&lt;p&gt;One of the rhetorical challenges of persuading people to stop using PGP is that there’s no one thing you can replace it with, &lt;em&gt;nor should there be&lt;/em&gt;. What you should use instead depends on what you’re doing.&lt;/p&gt;
&lt;h3 id=&#34;talking-to-people&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#talking-to-people&#34;&gt;#&lt;/a&gt; Talking To People&lt;/h3&gt;
&lt;p&gt;Use Signal. Or Wire, or WhatsApp, or some other Signal-protocol-based secure messenger.&lt;/p&gt;
&lt;p&gt;Modern secure messengers are purpose-built around messaging. They use privacy-preserving authentication handshakes, repudiable messages, &lt;em&gt;cryptographic ratchets&lt;/em&gt; that rekey on every message exchange, and, of course, modern encryption primitives. Messengers are trivially easy to use and there’s no fussing over keys and subkeys. If you use Signal, you get even more than that:  you get a system so paranoid about keeping private metadata off servers  that it tunnels Giphy searches to avoid traffic analysis attacks, and  until relatively recently didn’t even support user profiles.&lt;/p&gt;
&lt;h3 id=&#34;encrypting-email&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#encrypting-email&#34;&gt;#&lt;/a&gt; Encrypting Email&lt;/h3&gt;
&lt;p&gt;Don’t.&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uZXdzLnljb21iaW5hdG9yLmNvbS9pdGVtP2lkPTE2MDg4Mzg2&#34;&gt;Email is insecure&lt;/span&gt;. Even with PGP, it’s default-plaintext, which means that even if you do  everything right, some totally reasonable person you mail, doing totally reasonable things, will invariably CC the quoted plaintext of your  encrypted message to someone else (we don’t know a PGP email user who  hasn’t seen this happen). PGP email is forward-insecure. Email metadata, including the subject (which is literally message content), are always  plaintext.&lt;/p&gt;
&lt;p&gt;If you needed another reason, &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudXNlbml4Lm9yZy9zeXN0ZW0vZmlsZXMvY29uZmVyZW5jZS91c2VuaXhzZWN1cml0eTE4L3NlYzE4LXBvZGRlYm5pYWsucGRm&#34;&gt;read the Efail paper&lt;/span&gt;. The GnuPG community, &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgxMjI1MjE0NzMwL2h0dHBzOi8vZmxha2VkLnNvY2twdXBwZXQub3JnLzIwMTgvMDUvMTYvYS11bmlmaWVkLXRpbWVsaW5lLmh0bWw=&#34;&gt;which mishandled the Efail disclosure&lt;/span&gt;, talks this research down a lot, but it was accepted at Usenix Security  (one of the top academic software security venues) and at Black Hat USA (&lt;em&gt;the&lt;/em&gt; top industry software security venue), was one of the best  cryptographic attacks of the last 5 years, and is a pretty devastating  indictment of the PGP ecosystem. As you’ll see from the paper, S/MIME  isn’t better.&lt;/p&gt;
&lt;p&gt;This isn’t going to get fixed. To make actually-secure email, you’d  have to tunnel another protocol over email (you’d still be conceding  traffic analysis attacks). At that point, why bother pretending?&lt;/p&gt;
&lt;p&gt;Encrypting email is asking for a calamity. Recommending email  encryption to at-risk users is malpractice. Anyone who tells you it’s  secure to communicate over PGP-encrypted email is putting their weird  preferences ahead of your safety.&lt;/p&gt;
&lt;h3 id=&#34;sending-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#sending-files&#34;&gt;#&lt;/a&gt; Sending Files&lt;/h3&gt;
&lt;p&gt;Use &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL3dhcm5lci9tYWdpYy13b3JtaG9sZQ==&#34;&gt;Magic Wormhole&lt;/span&gt;. Wormhole clients use a one-time password-authenticated key exchange  (PAKE) to encrypt files to recipients. It’s easy (for nerds, at least),  secure, and fun: we haven’t introduced wormhole to anyone who didn’t  start gleefully wormholing things immediately just like we did.&lt;/p&gt;
&lt;p&gt;Someone stick a Windows installer on a Go or Rust implementation of  Magic Wormhole right away; it’s too great for everyone not to have.&lt;/p&gt;
&lt;p&gt;If you’re working with lawyers and not with technologists, Signal  does a perfectly cromulent job of securing file transfers. Put a Signal  number on your security page to receive bug bounty reports, not a PGP  key.&lt;/p&gt;
&lt;h3 id=&#34;encrypting-backups&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#encrypting-backups&#34;&gt;#&lt;/a&gt; Encrypting Backups&lt;/h3&gt;
&lt;p&gt;Use Tarsnap. &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGFyc25hcC5jb20vZGVzaWduLmh0bWw=&#34;&gt;Colin can tell you all about how Tarsnap is optimized to protect backups.&lt;/span&gt; Or really, use any other encrypted backup tool that lots of other  people use; they won’t be as good as Tarsnap but they’ll all do a better job than PGP will.&lt;/p&gt;
&lt;p&gt;Need offline backups? Use encrypted disk images; they’re built into modern Windows, Linux, and macOS. &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zb2NrcHVwcGV0Lm9yZy9ibG9nLzIwMTQvMDQvMzAveW91LWRvbnQtd2FudC14dHMv&#34;&gt;Full disk encryption isn’t great&lt;/span&gt;, but it works fine for this use case, and it’s easier and safer than PGP.&lt;/p&gt;
&lt;h3 id=&#34;signing-packages&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#signing-packages&#34;&gt;#&lt;/a&gt; Signing Packages&lt;/h3&gt;
&lt;p&gt;Use Signify/Minisign. &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3BlbmJzZC5vcmcvcGFwZXJzL2JzZGNhbi1zaWduaWZ5Lmh0bWw=&#34;&gt;Ted Unangst will tell you all about it.&lt;/span&gt; It’s what OpenBSD uses to sign packages. It’s extremely simple and uses modern signing. &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qZWRpc2N0MS5naXRodWIuaW8vbWluaXNpZ24v&#34;&gt;Minisign&lt;/span&gt;, from Frank Denis, the libsodium guy, brings the same design to Windows  and macOS; it has bindings for Go, Rust, Python, Javascript, and .NET;  it’s even compatible with Signify.&lt;/p&gt;
&lt;h3 id=&#34;encrypting-application-data&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#encrypting-application-data&#34;&gt;#&lt;/a&gt; Encrypting Application Data&lt;/h3&gt;
&lt;p&gt;Use  &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2plZGlzY3QxL2xpYnNvZGl1bQ==&#34;&gt;libsodium&lt;/span&gt; It builds everywhere, has interface that’s designed to be hard to misuse,  and you won’t have to shell out to a binary to use it.&lt;/p&gt;
&lt;h3 id=&#34;encrypting-files&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#encrypting-files&#34;&gt;#&lt;/a&gt; Encrypting Files&lt;/h3&gt;
&lt;p&gt;This really is a problem. If you’re/not/making a backup, and you’re  /not/archiving something offline for long-term storage, and you’re  /not/encrypting in order to securely send the file to someone else, and  you’re /not/encrypting virtual drives that you mount/unmount as needed  to get work done, then there’s no one good tool that does this now.  Filippo Valsorda is working on “&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xMXlIb20yMENyc3VYOEtRSlhCQncwNHM4MFVuanY4ekNnX0E3c1BBWF85WS92aWV3&#34;&gt;age&lt;/span&gt;” for these use cases, and I’m super optimistic about it, but it’s not there yet.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;Update, February 2020&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Filippo’s &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hZ2UtZW5jcnlwdGlvbi5vcmc=&#34;&gt;age&lt;/span&gt; has been  released. It’s a solid design with simple, easily auditable  implementations in Go and Rust. You can build binaries for it for every  mainstream platform. Age is, of course, much younger than PGP. But I  would bet all the money in my pocket against all the money in yours that a new vulnerability will be found in the clangorous contraption of PGP  before one is found in age. Look into age!&lt;/p&gt;
&lt;p&gt;Hopefully it’s clear that this is a pretty narrow use case. We work  in software security and handle sensitive data, including bug bounty  reports (another super common “we need PGP!” use case), and we almost  never have to touch PGP.&lt;/p&gt;
&lt;p&gt;Follow &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9taWNyby5ibG9nL2xhdGFjb3Jh&#34;&gt;@latacora on Micro.blog&lt;/span&gt;.&lt;/p&gt;
 ]]></description>
        </item>
        <item>
            <guid isPermalink="true">https://sakurame.eu.org/2023/05/25/privacy/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E6%8C%87%E5%8D%97%EF%BC%88%E9%95%BF%E6%9C%9F%E7%BF%BB%E8%AF%91%E9%A1%B9%E7%9B%AE%EF%BC%89/</guid>
            <title>隐私保护指南（长期翻译项目）</title>
            <link>https://sakurame.eu.org/2023/05/25/privacy/%E9%9A%90%E7%A7%81%E4%BF%9D%E6%8A%A4%E6%8C%87%E5%8D%97%EF%BC%88%E9%95%BF%E6%9C%9F%E7%BF%BB%E8%AF%91%E9%A1%B9%E7%9B%AE%EF%BC%89/</link>
            <category>隐私</category>
            <pubDate>Thu, 25 May 2023 21:23:39 +0800</pubDate>
            <description><![CDATA[ &lt;h1 id=&#34;why-privacy-matters&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#why-privacy-matters&#34;&gt;#&lt;/a&gt; Why Privacy Matters&lt;/h1&gt;
&lt;p&gt;为什么隐私很重要&lt;/p&gt;
&lt;p&gt;In the modern age of digital data exploitation, your privacy has never  been more critical, and yet many believe it is already a lost cause. It  is not. Your privacy is up for grabs, and you need to care about it. Privacy is about power, and it is so important that this power ends up in the right hands.&lt;/p&gt;
&lt;p&gt;在现在这个数据大爆发的时代，您的隐私从未变得如此危险，并且有很多人相信已经失去了隐私。您的隐私任人宰割，并且需要您去关心它。隐私关乎权利，确保这种权利始终掌握在正确的人手中是如此的重要。&lt;/p&gt;
&lt;p&gt;Privacy is ultimately about human information, and this is important  because we know that human information confers power over human beings.  If we care about our ability to be authentic, fulfilled, and free  humans, we have to care about the rules that apply to information about  us. So much of our modern society is structured around &lt;strong&gt;information&lt;/strong&gt;. When you shop online, read the news, look something up, vote, seek  directions, or really anything else, you are relying on information. If  we live in an information society, our information matters, and  therefore privacy matters.&lt;/p&gt;
&lt;p&gt;隐私最终是和人们的基础信息息息相关并且这很重要，因为我们知道人们的信息所赋予人们的权利。我们关心自己成为真实，充实和自由的人的能力，我们就必须关心适用于我们信息的规则，我们现代社会的大部分内容都是围绕&lt;strong&gt;信息&lt;/strong&gt;构建的。当您在网上购物、阅读新闻、查找资料、投票、寻找方向或其他任何事情时，您都在依赖信息。   如果我们生活在一个信息社会中，我们的信息很重要，因此隐私很重要。&lt;/p&gt;
&lt;h2 id=&#34;what-is-privacy&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#what-is-privacy&#34;&gt;#&lt;/a&gt; What is Privacy?&lt;/h2&gt;
&lt;p&gt;什么是隐私&lt;/p&gt;
&lt;p&gt;Many people get the concepts of &lt;strong&gt;privacy&lt;/strong&gt;, &lt;strong&gt;security&lt;/strong&gt;, and &lt;strong&gt;anonymity&lt;/strong&gt; confused. You&#39;ll see people criticize various products as &amp;quot;not private&amp;quot; when really they mean it doesn&#39;t provide anonymity, for example. On  this website, we cover all three of these topics, but it is important  you understand the difference between them, and when each one comes into play.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;许多人混淆了隐私&lt;/strong&gt; 、 &lt;strong&gt;安全&lt;/strong&gt; 和 &lt;strong&gt;匿名&lt;/strong&gt;的概念。例如，您会看到人们批评各种产品 “不私密”，而实际上他们的意思是这些产品不提供匿名功能。   在本网站上，我们涵盖了所有这三个主题，但重要的是您了解它们之间的区别，以及每个主题何时发挥作用。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Privacy&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;隐私&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Privacy is the assurance that your data is only seen by the parties you intend to view it.&lt;/strong&gt; In the context of an instant messenger, for example, end-to-end  encryption provides privacy by keeping your message visible only to  yourself and the recipient.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;隐私是保证您的数据只被您期望查看的对方看到&lt;/strong&gt;。 例如，在即时通讯程序的上下文中，端到端加密通过使您的消息仅对您自己和收件人可见来提供隐私。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Security&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;安全&lt;/p&gt;
&lt;p&gt;Security is the ability to trust the applications you use—that the  parties involved are who they say they are—and keep those applications  safe. In the context of browsing the web, for example, security can be  provided by HTTPS certificates.&lt;/p&gt;
&lt;p&gt;安全性是信任您所使用的应用程序的能力 —— 正如他们所说的那样 —— 并保证这些应用程序的安全。例如，在浏览 Web 的上下文中，可以通过 HTTPS 证书提供安全性。&lt;/p&gt;
&lt;p&gt;Certificates prove you are talking directly to the website you&#39;re  visiting, and keep attackers on your network from reading or modifying  the data sent to or from the website.&lt;/p&gt;
&lt;p&gt;证书证明您正在直接与正在访问的网站对话，并防止您网络上的攻击者读取或修改发送到网站或从网站发送的数据。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Anonymity&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;匿名&lt;/p&gt;
&lt;p&gt;Anonymity is the ability to act without a persistent identifier. You might achieve this online with &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHJpdmFjeWd1aWRlcy5vcmcvZW4vdG9yLw==&#34;&gt;Tor&lt;/span&gt;, which allows you to browse the internet with a random IP address and network connection instead of your own.&lt;/p&gt;
&lt;p&gt;匿名是在没有持久标识符的情况下行动的能力。您可以使用 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucHJpdmFjeWd1aWRlcy5vcmcvZW4vdG9yLw==&#34;&gt;Tor &lt;/span&gt;浏览互联网，它允许您使用随机 IP 地址和网络连接而不是您自己的来来实现这一点。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Pseudonymity&lt;/strong&gt; is a similar concept, but it allows you to have a persistent identifier without it being tied to your real  identity. If everybody knows you as  &lt;code&gt;@GamerGuy12&lt;/code&gt;  online, but nobody knows your real name, that is your pseudonym.&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;假名&lt;/strong&gt; 是一个类似的概念，但它允许您拥有一个持久的标识符，而无需将其与您的真实身份联系起来。如果每个人都知道你是  &lt;code&gt;@GamerGuy12&lt;/code&gt;  在线，但没有人知道你的真名，那么它是你的假名。&lt;/p&gt;
 ]]></description>
        </item>
    </channel>
</rss>
