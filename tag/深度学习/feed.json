{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sakura • All posts by \"深度学习\" tag",
    "description": "一个专注于技术和思考分享的博客",
    "home_page_url": "https://sakurame.eu.org",
    "items": [
        {
            "id": "https://sakurame.eu.org/2023/05/22/basic-theory/%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E7%89%88%E7%AC%94%E8%AE%B0/",
            "url": "https://sakurame.eu.org/2023/05/22/basic-theory/%E5%8A%A8%E6%89%8B%E5%AD%A6%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E7%AC%AC%E4%BA%8C%E7%89%88%E7%AC%94%E8%AE%B0/",
            "title": "动手学深度学习第二版笔记",
            "date_published": "2023-05-22T14:03:55.000Z",
            "content_html": "<h1 id=\"1-引言\"><a class=\"anchor\" href=\"#1-引言\">#</a> 1. 引言</h1>\n<p><em>机器学习</em>（machine learning，ML）是一类强大的可以<strong>从经验中学习</strong>的技术。 通常采用<strong>观测数据</strong>或<strong>与环境交互</strong>的形式，机器学习算法会<strong>积累更多</strong>的<strong>经验</strong>，其<strong>性能</strong>也会<strong>逐步提高</strong>。本书将带读者开启机器学习之旅，并特别关注<em>深度学习</em>（deep learning，DL）的基础知识。 深度学习是一套强大的技术，它可以推动计算机视觉、自然语言处理、医疗保健和基因组学等不同领域的创新。</p>\n<h2 id=\"11-日常生活中的机器学习\"><a class=\"anchor\" href=\"#11-日常生活中的机器学习\">#</a> 1.1. 日常生活中的机器学习</h2>\n<p>现在，假如需要我们编写程序来响应一个 “唤醒词”（比如 “Alexa”“小爱同学” 和 “Hey Siri”）。 我们试着用一台计算机和一个代码编辑器编写代码，如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNmaWctd2FrZS13b3Jk\">图 1.1.1</span> 中所示。 问题看似很难解决：麦克风每秒钟将收集大约 44000 个样本，每个样本都是声波振幅的测量值。而该测量值与唤醒词难以直接关联。那又该如何编写程序，令其输入麦克风采集到的原始音频片段，输出 {是，否}（表示该片段是否包含唤醒词）的可靠预测呢？我们对编写这个程序毫无头绪，这就是需要机器学习的原因。</p>\n<p><img data-src=\"https://zh.d2l.ai/_images/wake-word.svg\" alt=\"\" /></p>\n<p>那么到底什么是参数呢？ <strong>参数</strong>可以被看作<strong>旋钮</strong>，旋钮的<strong>转动可以调整程序的行为</strong>。 任一<strong>调整参数后的程序</strong>被称为<em><strong>模型</strong></em>（model）。 通过操作参数而生成的<strong>所有不同程序</strong>（输入 - 输出映射）的集合称为 “<em><strong>模型族</strong></em>”。 使用数据集来<strong>选择参数</strong>的<strong>元程序</strong>被称为<em><strong>学习算法</strong></em>（learning algorithm）。</p>\n<p>在开始用机器学习算法解决问题之前，我们必须精确地定义问题，确定<em>输入</em>（input）和<em>输出</em>（output）的性质，并选择合适的模型族。</p>\n<p>在机器学习中，<em><strong>学习</strong></em>（learning）是一个<strong>训练模型</strong>的<strong>过程</strong>。 通过这个过程，我们可以发现<strong>正确</strong>的<strong>参数集</strong>，从而使模型<strong>强制执行所需的行为</strong>。 换句话说，我们用数据<em>训练</em>（train）模型。 如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNmaWctbWwtbG9vcA==\">图 1.1.2</span> 所示，训练过程通常包含如下步骤：</p>\n<ol>\n<li>从一个随机初始化参数的模型开始，这个模型基本没有 “智能”；</li>\n<li>获取一些数据样本（例如，音频片段以及对应的是或否标签）；</li>\n<li>调整参数，使模型在这些样本中表现得更好；</li>\n<li>重复第（2）步和第（3）步，直到模型在任务中的表现令人满意。</li>\n</ol>\n<p><img data-src=\"https://zh.d2l.ai/_images/ml-loop.svg\" alt=\"\" /></p>\n<p>​                                                            图 1.1.2 一个典型的训练过程</p>\n<p>总而言之，我们没有编写唤醒词识别器，而是编写了一个 “学习” 程序。 如果我们用一个巨大的带标签的数据集，它很可能可以 “学习” 识别唤醒词。 这种 “通过用数据集来确定程序行为” 的方法可以被看作<em>用数据编程</em>（programming with data）。</p>\n<h2 id=\"12-机器学习中的关键组件\"><a class=\"anchor\" href=\"#12-机器学习中的关键组件\">#</a> 1.2. 机器学习中的关键组件<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDM=\"> ¶</span></h2>\n<p>首先介绍一些核心组件。无论什么类型的机器学习问题，都会遇到这些组件：</p>\n<ol>\n<li>可以用来学习的<em>数据</em>（data）；</li>\n<li>如何转换数据的<em>模型</em>（model）；</li>\n<li>一个<em>目标函数</em>（objective function），用来量化模型的有效性；</li>\n<li>调整模型参数以优化目标函数的<em>算法</em>（algorithm）。</li>\n</ol>\n<h3 id=\"121-数据\"><a class=\"anchor\" href=\"#121-数据\">#</a> 1.2.1. 数据</h3>\n<p>毋庸置疑，如果没有数据，那么数据科学毫无用武之地。 每个数据集由一个个<em><strong>样本</strong></em>（example, sample）组成，大多时候，它们遵循<em><strong>独立同分布</strong></em> (independently and identically distributed, i.i.d.)。 样本有时也叫做<em><strong>数据点</strong></em>（data point）或者<em><strong>数据实例</strong></em>（data instance），通常每个样本由一组称为<em><strong>特征</strong></em>（features，或<em><strong>协变量</strong></em>（covariates））的<strong>属性</strong>组成。 机器学习模型会根据这些属性进行预测。 在上面的监督学习问题中，要预测的是一个<strong>特殊的属性</strong>，它被称为<em><strong>标签</strong></em>（label，或<em><strong>目标</strong></em>（target））。</p>\n<p>每个样本的特征类别数量都是相同的时候，其特征向量是固定长度的，这个长度被称为数据的<em><strong>维数</strong></em>（dimensionality）。 固定长度的特征向量是一个方便的属性，它可以用来量化学习大量样本。</p>\n<p>然而，并不是所有的数据都可以用 “固定长度” 的向量表示。与传统机器学习方法相比，深度学习的一个主要优势是可以处理不同长度的数据。</p>\n<p>一般来说，拥有越多数据的时候，工作就越容易。 更多的数据可以被用来训练出更强大的模型，从而减少对预先设想假设的依赖。 数据集的由小变大为现代深度学习的成功奠定基础。 在没有大数据集的情况下，许多令人兴奋的深度学习模型黯然失色。 就算一些深度学习模型在小数据集上能够工作，但其效能并不比传统方法高。</p>\n<p>请注意，仅仅拥有海量的数据是不够的，我们还需要正确的数据。 如果数据中充满了错误，或者如果数据的特征不能预测任务目标，那么模型很可能无效。此外，糟糕的预测性能甚至会加倍放大事态的严重性。我们必须特别警惕垃圾数据带来的后果。</p>\n<h3 id=\"122-模型\"><a class=\"anchor\" href=\"#122-模型\">#</a> 1.2.2. 模型<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDU=\"> ¶</span></h3>\n<p>深度学习与经典方法的区别主要在于：前者关注的功能强大的模型，这些模型由神经网络错综复杂的交织在一起，包含层层数据转换，因此被称为<em>深度学习</em>（deep learning）。</p>\n<h3 id=\"123-目标函数\"><a class=\"anchor\" href=\"#123-目标函数\">#</a> 1.2.3. 目标函数<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDY=\"> ¶</span></h3>\n<p>前面的内容将机器学习介绍为 “<strong>从经验中学习</strong>”。 这里所说的 “<strong>学习</strong>”，是指<strong>自主提高模型完成某些任务的效能</strong>。在机器学习中，我们需要定义<strong>模型的优劣程度的度量</strong>，这个度量在大多数情况是 “<strong>可优化</strong>” 的，这被称之为<em><strong>目标函数</strong></em>（objective function）。 我们通常定义一个目标函数，并希望优化它到<strong>最低点</strong>。 因为<strong>越低越好</strong>，所以这些函数有时被称为<em><strong>损失函数</strong></em>（loss function，或 cost function）。 但这只是一个惯例，我们也可以取一个新的函数，优化到它的最高点。 这两个函数本质上是相同的，只是翻转一下符号。</p>\n<p>当任务在试图<strong>预测数值</strong>时，最常见的损失函数是<em><strong>平方误差</strong></em>（squared error），即<strong>预测值与实际值之差的平方</strong>。 当试图解决<strong>分类问题</strong>时，最常见的目标函数是<em><strong>最小化错误率</strong></em>，即预测与实际情况不符的样本比例。 有些目标函数（如平方误差）很容易被优化，有些目标（如错误率）由于不可微性或其他复杂性难以直接优化。 在这些情况下，通常会优化<em>替代目标</em>。</p>\n<p>通常，损失函数是根据模型参数定义的，并取决于数据集。 在一个数据集上，我们可以通过<strong>最小化总损失</strong>来学习模型参数的最佳值。 该数据集由一些<strong>为训练而收集的样本</strong>组成，称为<em><strong>训练数据集</strong></em>（training dataset，或称为<em><strong>训练集</strong></em>（training set））。 然而，在训练数据上表现良好的模型，并不一定在 “新数据集” 上有同样的性能，这里的 “<strong>新数据集</strong>” 通常称为<em><strong>测试数据集</strong></em>（test dataset，或称为<em><strong>测试集</strong></em>（test set））。</p>\n<p>综上所述，可用数据集通常可以分成两部分：训练数据集用于拟合模型参数，测试数据集用于评估拟合的模型。 然后我们观察模型在这两部分数据集的性能。 “一个模型在训练数据集上的性能” 可以被想象成 “一个学生在模拟考试中的分数”。 这个分数用来为一些真正的期末考试做参考，即使成绩令人鼓舞，也不能保证期末考试成功。 换言之，测试性能可能会显著偏离训练性能。 当一个模型在训练集上表现良好，但不能推广到测试集时，这个模型被称为<em>过拟合</em>（overfitting）的。 就像在现实生活中，尽管模拟考试考得很好，真正的考试不一定百发百中。</p>\n<h3 id=\"124-优化算法\"><a class=\"anchor\" href=\"#124-优化算法\">#</a> 1.2.4. 优化算法<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDc=\"> ¶</span></h3>\n<p>深度学习中，大多流行的优化算法通常基于一种基本方法–<em><strong>梯度下降</strong></em>（gradient descent）。 <strong>简而言之，在每个步骤中，梯度下降法都会检查每个参数，看看如果仅对该参数进行少量变动，训练集损失会朝哪个方向移动。 然后，它在可以减少损失的方向上优化参数。</strong></p>\n<h2 id=\"13-各种机器学习问题\"><a class=\"anchor\" href=\"#13-各种机器学习问题\">#</a> 1.3. 各种机器学习问题<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDg=\"> ¶</span></h2>\n<h3 id=\"131-监督学习\"><a class=\"anchor\" href=\"#131-监督学习\">#</a> 1.3.1. 监督学习<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDk=\"> ¶</span></h3>\n<p><em><strong>监督学习</strong></em>（supervised learning）擅长在 “给定输入特征” 的情况下预测标签。 每个 “特征 - 标签” 对都称为一个<em>样本</em>（example）。 有时，即使标签是未知的，样本也可以指代输入特征。 我们的目标是生成一个模型，能够将任何输入特征映射到标签（即预测）。</p>\n<p>监督学习之所以能发挥作用，是因为在训练参数时，我们为模型提供了一个数据集，其中每个样本都有真实的标签。 用概率论术语来说，我们希望预测 “<strong>估计给定输入特征的标签</strong>” 的条件概率。 虽然监督学习只是几大类机器学习问题之一，<strong>但是在工业中，大部分机器学习的成功应用都使用了监督学习</strong>。 这是因为在一定程度上，<strong>许多重要的任务可以清晰地描述为，在给定一组特定的可用数据的情况下，估计未知事物的概率</strong>。</p>\n<p>监督学习的学习过程一般可以分为三大步骤：</p>\n<ol>\n<li>从已知大量数据样本中随机选取一个子集，为每个样本获取真实标签。有时，这些样本已有标签（例如，患者是否在下一年内康复？）；有时，这些样本可能需要被人工标记（例如，图像分类）。这些输入和相应的标签一起构成了训练数据集；</li>\n<li>选择有监督的学习算法，它将训练数据集作为输入，并输出一个 “已完成学习的模型”；</li>\n<li>将之前没有见过的样本特征放到这个 “已完成学习的模型” 中，使用模型的输出作为相应标签的预测。</li>\n</ol>\n<p>整个监督学习过程如 <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNmaWctc3VwZXJ2aXNlZC1sZWFybmluZw==\">图 1.3.1</span> 所示</p>\n<p><img data-src=\"https://zh.d2l.ai/_images/supervised-learning.svg\" alt=\"\" /></p>\n<p>​                                                                              图 1.3.1 监督学习<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDU0\"> ¶</span></p>\n<p>综上所述，即使使用简单的描述给定输入特征的预测标签，监督学习也可以采取多种形式的模型，并且需要大量不同的建模决策，这取决于输入和输出的类型、大小和数量</p>\n<h4 id=\"1311-回归\"><a class=\"anchor\" href=\"#1311-回归\">#</a> 1.3.1.1. 回归<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDEw\"> ¶</span></h4>\n<p><em><strong>回归</strong></em>（regression）是最简单的监督学习任务之一。生活中的许多问题都可归类为回归问题。 比如，预测用户对一部电影的评分可以被归类为一个回归问题。总而言之，判断回归问题的一个很好的经验法则是，任何有关 “有多少” 的问题很可能就是回归问题。比如：</p>\n<ul>\n<li>这个手术需要多少小时；</li>\n<li>在未来 6 小时，这个镇会有多少降雨量。</li>\n</ul>\n<p>然而，以上假设有时并不可取。 例如，一些差异是由于两个特征之外的几个因素造成的。 在这些情况下，我们将尝试学习最小化 “预测值和实际标签值的差异” 的模型。 本书大部分章节将关注平方误差损失函数的最小化。</p>\n<h4 id=\"1312-分类\"><a class=\"anchor\" href=\"#1312-分类\">#</a> 1.3.1.2. 分类<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDEx\"> ¶</span></h4>\n<p>这种 “<strong>哪一个</strong>” 的问题叫做<em><strong>分类</strong></em>（classification）问题。 <em>分类</em>问题希望模型能够预测样本属于哪个<em><strong>类别</strong></em>（category，正式称为<em><strong>类</strong></em>（class））。最简单的分类问题是只有两类，这被称之为<em><strong>二项分类</strong></em>（binomial classification）。<strong>回归是训练一个回归函数来输出一个数值； 分类是训练一个分类器来输出预测的类别。<strong>当有</strong>两个以上的类别</strong>时，我们把这个问题称为<em>当有两个以上的类别时，我们把这个问题称为</em>多项分类 *（multiclass classification）问题。 *（multiclass classification）问题。</p>\n<p>预测类别的<strong>概率的大小</strong>传达了一种<strong>模型的不确定性</strong>，本书后面章节将讨论其他运用不确定性概念的算法。与解决回归问题不同，<strong>分类</strong>问题的常见<strong>损失函数</strong>被称为<em><strong>交叉熵</strong></em>（cross-entropy）。我们需要将 “预期风险” 作为损失函数，即需要将结果的概率乘以与之相关的收益（或伤害）。</p>\n<p>分类可能变得比二项分类、多项分类复杂得多。例如，有一些分类任务的变体可以用于寻找层次结构，<strong>层次结构</strong>假定在<strong>许多类之间存在某种关系</strong>。 因此，并不是所有的错误都是均等的。人们宁愿错误地分入一个相关的类别，也不愿错误地分入一个遥远的类别，这通常被称为<em><strong>层次分类</strong></em> (hierarchical classification)。层次结构相关性可能取决于模型的使用者计划如何使用模型。</p>\n<h4 id=\"1313-标记问题\"><a class=\"anchor\" href=\"#1313-标记问题\">#</a> 1.3.1.3. 标记问题<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDEy\"> ¶</span></h4>\n<p>学习预测<strong>不相互排斥</strong>的<strong>类别</strong>的问题称为<em><strong>多标签分类</strong></em>（multi-label classification）。举个例子，人们在技术博客上贴的标签，比如 “机器学习”“技术”“小工具”“编程语言”“Linux”“云计算”“AWS”。 一篇典型的文章可能会用 5～10 个标签，因为这些<strong>概念</strong>是<strong>相互关联</strong>的。此外，在处理生物医学文献时，我们也会遇到这类问题。 <strong>正确地标记文献很重要，有利于研究人员对文献进行详尽的审查</strong>。</p>\n<p><img data-src=\"https://zh.d2l.ai/_images/stackedanimals.png\" alt=\"\" /></p>\n<p>​                                                  图 1.3.3 一只猫、一只公鸡、一只狗、一头驴</p>\n<h4 id=\"1314-搜索\"><a class=\"anchor\" href=\"#1314-搜索\">#</a> 1.3.1.4. 搜索<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDEz\"> ¶</span></h4>\n<p>有时，我们不仅仅希望输出一个类别或一个实值。 在信息检索领域，我们希望<strong>对一组项目进行排序</strong>。搜索结果的排序也十分重要，学习算法需要输出有序的元素子集。 换句话说，<strong>即使结果集是相同的，集内的顺序有时却很重要</strong>。该问题的一种可能的解决方案：首先为集合中的每个元素分配相应的相关性分数，然后检索评级最高的元素。如今，搜索引擎使用机器学习和用户行为模型来获取网页相关性得分，很多学术会议也致力于这一主题。</p>\n<h4 id=\"1315-推荐系统\"><a class=\"anchor\" href=\"#1315-推荐系统\">#</a> 1.3.1.5. 推荐系统<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNpZDE0\"> ¶</span></h4>\n<p>另一类与搜索和排名相关的问题是<em><strong>推荐系统</strong></em>（recommender system），它的目标是向特定用户进行 “<strong>个性化</strong>” 推荐。在某些应用中，客户会提供明确反馈，表达他们对特定产品的喜爱程度。在其他一些情况下，客户会提供隐性反馈。总的来说，推荐系统会为 “<strong>给定用户和物品</strong>” 的<strong>匹配性打分</strong>，这个 “分数” 可能是估计的评级或购买的概率。由此，对于任何给定的用户，推荐系统都可以检索<strong>得分最高</strong>的<strong>对象集</strong>，然后将其<strong>推荐给用户</strong>。以上只是<strong>简单的算法</strong>，而<strong>工业生产</strong>的<strong>推荐系统</strong>要先进得多，它会将详细的<strong>用户活动</strong>和<strong>项目特征</strong>考虑在内。 推荐系统算法经过调整，可以捕捉一个人的偏好。比如， <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aC5kMmwuYWkvY2hhcHRlcl9pbnRyb2R1Y3Rpb24vaW5kZXguaHRtbCNmaWctZGVlcGxlYXJuaW5nLWFtYXpvbg==\">图 1.3.4</span> 是亚马逊基于个性化算法推荐的深度学习书籍，成功地捕捉了作者的喜好。</p>\n<p><img data-src=\"https://zh.d2l.ai/_images/deeplearning-amazon.jpg\" alt=\"\" /></p>\n<p>​                                                                 图 1.3.4 亚马逊推荐的深度学习书籍</p>\n<p>尽管推荐系统具有巨大的应用价值，但单纯用它作为预测模型仍存在一些缺陷。</p>\n",
            "tags": [
                "深度学习"
            ]
        }
    ]
}