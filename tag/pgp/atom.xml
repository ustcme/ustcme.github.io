<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://sakurame.eu.org</id>
    <title>Sakura • Posts by &#34;pgp&#34; tag</title>
    <link href="https://sakurame.eu.org" />
    <updated>2024-03-21T14:55:02.000Z</updated>
    <category term="张量可视化" />
    <category term="Hyperstreamline" />
    <category term="Unix" />
    <category term="连通性分析" />
    <category term="油藏工程" />
    <category term="人工智能" />
    <category term="深度学习" />
    <category term="雅思" />
    <category term="翻译" />
    <category term="建站" />
    <category term="PMBOK" />
    <category term="图形学" />
    <category term="游戏引擎" />
    <category term="PBRT" />
    <category term="隐私" />
    <category term="PGP" />
    <category term="Secure Boot" />
    <category term="随笔" />
    <category term="感悟" />
    <category term="总结" />
    <category term="PT" />
    <category term="思辨" />
    <category term="板砖美学" />
    <category term="压制技术" />
    <category term="视频压制技术系列教程" />
    <entry>
        <id>https://sakurame.eu.org/2024/03/21/privacy/%E6%9F%90%E7%A7%91%E5%AD%A6%E7%9A%84PGP%E7%AE%97%E5%8F%B7%E6%8C%87%E5%8D%97/</id>
        <title>某科学的PGP算号指南</title>
        <link rel="alternate" href="https://sakurame.eu.org/2024/03/21/privacy/%E6%9F%90%E7%A7%91%E5%AD%A6%E7%9A%84PGP%E7%AE%97%E5%8F%B7%E6%8C%87%E5%8D%97/"/>
        <content type="html">&lt;h2 id=&#34;前言&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#前言&#34;&gt;#&lt;/a&gt; 前言&lt;/h2&gt;
&lt;p&gt;我们都知道，PGP 公钥的指纹是 40 位的十六进制哈希值，一般以结尾的 8 位或 16 位十六进制数字做为密钥的 KeyID。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuZG91YmFuLmNvbS9ub3RlLzc2Mzk3ODk1NS8/X2k9NTU4NzIzNmt1Z0JuMWosNTcwNDgxOWt1Z0JuMWo=&#34;&gt;一位 PGP 进步青年的科学算号实践&lt;/span&gt; 的作者通过「科学」的算号过程成功生成了 8 位「靓号」，但是仅仅 8 位「靓号」可能出现下面这种情况：&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://blog.dejavu.moe/posts/the-scientific-vanity-pgp-counting-guide/0x8.webp&#34; alt=&#34;8 位 KeyID&#34; /&gt;8 位 KeyID&lt;/p&gt;
&lt;p&gt;因为 8 位的 KeyID 太容易撞车了，所以现在很多公共 Key Server 或使用 PGP 的应用中都至少显示 16 位以上的 KeyID，我们的目标是星辰大海，所以我们要「科学」地计算至少 12 位以上的「靓号」。&lt;/p&gt;
&lt;p&gt;结合这几天和群友的算号实践，算号难度和时间只跟一点点因素有关：PGP 密钥使用的算法、目标「靓号」的长度、算号机器的性能再加一点点运气。&lt;/p&gt;
&lt;h2 id=&#34;开始算号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始算号&#34;&gt;#&lt;/a&gt; 开始算号&lt;/h2&gt;
&lt;h3 id=&#34;cpu-算号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#cpu-算号&#34;&gt;#&lt;/a&gt; CPU 算号&lt;/h3&gt;
&lt;p&gt;CPU 算号的条件比较简单，在 Linux 和 macOS 都可以算 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmRlamF2dS5tb2UvcG9zdHMvdGhlLXNjaWVudGlmaWMtdmFuaXR5LXBncC1jb3VudGluZy1ndWlkZS8jZm46MQ==&#34;&gt;1&lt;/span&gt; ，CPU 算号的项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1JlZEwwdHVzL1Zhbml0eUdQRw==&#34;&gt;VanityGPG&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL0Vycml5L2dwZ19hd2Vzb21lX2tleWlk&#34;&gt;gpg_awesome_keyid&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2Jub2N0aXMvZzNr&#34;&gt;g3k&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;我推荐使用 VanityGPG 项目，它的效率比较高。生成 Ed25519 类型的靓号，实测算力如下：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&#34;text-align:center&#34;&gt;CPU&lt;/th&gt;
&lt;th style=&#34;text-align:center&#34;&gt;Calculation&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Intel Xeon Gold 6133 (4 Core)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;17,000,000 hash/s&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&#34;text-align:center&#34;&gt;Apple M1 ( MacBook Air)&lt;/td&gt;
&lt;td style=&#34;text-align:center&#34;&gt;32,000,000 hash/s&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;VanityGPG 比较吃 CPU 的线程数，因此选择核心和线程数量更多的算号机器效率更佳。&lt;/p&gt;
&lt;h4 id=&#34;linuxwsl2-安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#linuxwsl2-安装&#34;&gt;#&lt;/a&gt; Linux/WSL2 安装&lt;/h4&gt;
&lt;h4 id=&#34;以-debian-系统为例安装需要的软件包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#以-debian-系统为例安装需要的软件包&#34;&gt;#&lt;/a&gt; 以 Debian 系统为例，安装需要的软件包&lt;/h4&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;sudo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-y&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;rustc &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cargo&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;clang &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;pkg-config &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;nettle-dev &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;libssl-dev &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;capnproto &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;libsqlite3-dev&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;使用 Cargo 安装 VanityGPG&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;cargo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; vanity_gpg&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;macos-安装&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#macos-安装&#34;&gt;#&lt;/a&gt; macOS 安装&lt;/h4&gt;
&lt;p&gt;前提：安装 Homebrew 包管理器&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;brew &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; rust &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;cargo&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; vanity_gpg&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h4 id=&#34;使用方法&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#使用方法&#34;&gt;#&lt;/a&gt; 使用方法&lt;/h4&gt;
&lt;p&gt;查看 VanityGPG 帮助信息&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vanity_gpg &lt;span class=&#34;token number&#34;&gt;0.3&lt;/span&gt;.2&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;A simple tool &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; generating and filtering vanity GPG keys, c0nCurr3nt1Y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;USAGE:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    vanity_gpg &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;OPTIONS&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;--pattern&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;PATTERN&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;OPTIONS:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -c, --cipher-suite &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;CIPHER_SUITE&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            Cipher suite &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;default: Ed25519&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;possible values: Ed25519, RSA2048, RSA3072, RSA4096,&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            NISTP256, NISTP384, NISTP521&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -d, --dry-run&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            Dry run &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;does not save matched keys&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -h, &lt;span class=&#34;token parameter variable&#34;&gt;--help&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            Print &lt;span class=&#34;token builtin class-name&#34;&gt;help&lt;/span&gt; information&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -j, &lt;span class=&#34;token parameter variable&#34;&gt;--jobs&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;JOBS&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            Number of threads &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;default: &lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -p, &lt;span class=&#34;token parameter variable&#34;&gt;--pattern&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;PATTERN&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            Regex pattern &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; matching fingerprints&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -u, --user-id &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;USER_ID&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            OpenPGP compatible user ID&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -v, &lt;span class=&#34;token parameter variable&#34;&gt;--verbose&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            Verbose level&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    -V, &lt;span class=&#34;token parameter variable&#34;&gt;--version&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;            Print version information&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;示例写法&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;vanity_gpg &lt;span class=&#34;token parameter variable&#34;&gt;-c&lt;/span&gt; Ed25519 &lt;span class=&#34;token parameter variable&#34;&gt;-j8&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-u&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;First Name &amp;lt;user@xxx.com&gt;&#34;&lt;/span&gt; &lt;span class=&#34;token parameter variable&#34;&gt;-p&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#34;9&amp;#123;12&amp;#125;$|E&amp;#123;12&amp;#125;$&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;ul&gt;
&lt;li&gt;密钥的算法，可选的值有 Ed25519, RSA2048, RSA3072, RSA4096, NISTP256, NISTP384, NISTP52&lt;/li&gt;
&lt;li&gt;j8 代表使用 8 线程，根据算号机器的实际线程数调整&lt;/li&gt;
&lt;li&gt;算号匹配规则使用的正则表达式，示例是匹配密钥结尾是 12 个 9 或 12 个 E 的密钥&lt;/li&gt;
&lt;li&gt;其他信息按需修改即可，算号结果生成的密钥在当前登录用户的 Home 目录下&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;gpu-算号&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#gpu-算号&#34;&gt;#&lt;/a&gt; GPU 算号&lt;/h3&gt;
&lt;p&gt;GPU 算号相比 CPU 算号拥有更快的速度和效率，但是需要 nVidia 显卡和 CUDA 支持，GPU 算号的项目：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2N1aWhhb2xlby9ncGctZmluZ2VycHJpbnQtZmlsdGVyLWdwdQ==&#34;&gt;gpg-fingerprint-filter-gpu&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1ZpY3RyaWQvbWVtb3JhYmxlLXBncGdlbg==&#34;&gt;memorable-pgpgen&lt;/span&gt;&lt;/li&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2xhY2hlc2lzL3NjYWxsaW9u&#34;&gt;scallion&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;推荐使用 gpg-fingerprint-filter-gpu 项目，这是使用 RTX3090 计算 Ed25519 类型的「靓号」的算力 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmRlamF2dS5tb2UvcG9zdHMvdGhlLXNjaWVudGlmaWMtdmFuaXR5LXBncC1jb3VudGluZy1ndWlkZS8jZm46Mg==&#34;&gt;2&lt;/span&gt;&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://blog.dejavu.moe/posts/the-scientific-vanity-pgp-counting-guide/3090.webp&#34; alt=&#34;3090 Calculation&#34; /&gt;3090 Calculation&lt;/p&gt;
&lt;p&gt;我当然知道你没有 3090 啦 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmRlamF2dS5tb2UvcG9zdHMvdGhlLXNjaWVudGlmaWMtdmFuaXR5LXBncC1jb3VudGluZy1ndWlkZS8jZm46Mw==&#34;&gt;3&lt;/span&gt;，我们可以白嫖一些 GPU 云的免费额度，算个 12 位「靓号」绰绰有余了。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuYXV0b2RsLmNvbS9yZWdpc3Rlcj9jb2RlPWVjMmM3OTdmLTFkNmItNDY5ZC04ODJkLWQ2ZTk2MWZiYTUzMg==&#34;&gt;AutoDL 算力云&lt;/span&gt; 是国内一家良心的「炼丹云」，无需实名，新用户注册就有 10 元无门槛代金券。&lt;/p&gt;
&lt;p&gt;10 元不够用？少年，看看价格，要不然咱怎么说人家良心呢？&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://blog.dejavu.moe/posts/the-scientific-vanity-pgp-counting-guide/autodl.webp&#34; alt=&#34;AutoDL 算力云&#34; /&gt; AutoDL 算力云&lt;/p&gt;
&lt;p&gt;如果你准备使用自己的 Linux 机器或是 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLm52aWRpYS5jb20vY3VkYS93c2wtdXNlci1ndWlkZS9pbmRleC5odG1s&#34;&gt;WSL2&lt;/span&gt;，请确保提前安装好 CUDA 驱动程序，像上面 GPU 云服务商提供的机器都是默认安装好 CUDA 驱动程序的。&lt;/p&gt;
&lt;p&gt;以 AutoDL 的 Ubuntu/CUDA 11.2 机器为例，SSH 登录服务器，准备程序需要的环境&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; update &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;apt&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;install&lt;/span&gt; libgcrypt20-dev &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;git&lt;/span&gt; clone https://github.com/cuihaoleo/gpg-fingerprint-filter-gpu &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token builtin class-name&#34;&gt;cd&lt;/span&gt; gpg-fingerprint-filter-gpu &lt;span class=&#34;token punctuation&#34;&gt;\&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token operator&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&#34;token function&#34;&gt;make&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;以 Ed25519 类型的任意连续 12 位结尾 0-F 的密钥为例，开始算号&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;./gpg-fingerprint-filter-gpu &lt;span class=&#34;token parameter variable&#34;&gt;-a&lt;/span&gt; ed25519 &lt;span class=&#34;token parameter variable&#34;&gt;-t&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;31104400&lt;/span&gt; &lt;span class=&#34;token string&#34;&gt;&#39;x&amp;#123;12&amp;#125;&#39;&lt;/span&gt; output.pgp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;算号程序每次算到匹配的密钥就会自动停止进程，你可以使用 Shell &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9yYXcuZ2l0aHVidXNlcmNvbnRlbnQuY29tL2NvbWljY2hhbmcvZ3BnLWZpbmdlcnByaW50LWZpbHRlci1ncHUvbWFzdGVyL2dlbmVyYXRlX2JhdGNoX2tleXMuc2g=&#34;&gt;脚本&lt;/span&gt; 自动循环执行算号。这种方式算得的密钥都是空的 UID，导入的时候要带上允许空 UID 导入参数&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg --allow-non-selfsigned-uid &lt;span class=&#34;token parameter variable&#34;&gt;--import&lt;/span&gt; output.pgp&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;你也可以考虑使用百度 AI Studio 的 GPU 算力，可以长期白嫖学习，参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90ZWxlZ3JhLnBoL0JhaWR1LUZseWluZy1QdWxwLUFJLUxlYXJuaW5nLUNlbnRlci1QR1AtTnVtYmVyLUNvdW50aW5nLVR1dG9yaWFsLTEwLTE4&#34;&gt;使用百度飞浆 AI Studio 算 PGP 靓号教程&lt;/span&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;后续编辑 Key 的时候要先新增 UID，再删除之前那个空的 UID 即可正常使用，具体可参考 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2N1aWhhb2xlby9ncGctZmluZ2VycHJpbnQtZmlsdGVyLWdwdSNpbXBvcnQta2V5&#34;&gt;项目文档 - 导入&lt;/span&gt; 部分。&lt;/p&gt;
&lt;h2 id=&#34;缝合密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#缝合密钥&#34;&gt;#&lt;/a&gt; 缝合密钥&lt;/h2&gt;
&lt;p&gt;通过极高效率的 CPU/GPU 算号手段，现在的你已经拥有几枚至少 12 位的靓号了&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://blog.dejavu.moe/posts/the-scientific-vanity-pgp-counting-guide/vanity-pgp.webp&#34; alt=&#34;Vanity PGP&#34; /&gt;Vanity PGP&lt;/p&gt;
&lt;p&gt;对于大多数 PGP 人士来说，肯定是每个「靓号」不同的用途 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmRlamF2dS5tb2UvcG9zdHMvdGhlLXNjaWVudGlmaWMtdmFuaXR5LXBncC1jb3VudGluZy1ndWlkZS8jZm46NA==&#34;&gt;4&lt;/span&gt; ，所以我们要「缝合」密钥。&lt;/p&gt;
&lt;p&gt;何谓「缝合」？像内娱的「音乐人」一样，我们也要做个裁缝。把几个「靓号」子密钥缝合到「靓号」主密钥上，最后我们得到的密钥对类似这样：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec  ed25519/5266555555555555&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2020&lt;/span&gt;-12-14  expires: never       usage: SC&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     trust: ultimate      validity: ultimate&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb  ed25519/4399222222222222&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;-09-14  expires: never       usage: S&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb  rsa4096/5151EEEEEEEEEEEE&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;-10-13  expires: never       usage: E&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb  ed25519/4578AAAAAAAAAAAA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;-04-12  expires: never       usage: A&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;ultimate&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;. Dejavu Moe &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;xxx@xxx.com&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;准备缝合密钥之前，先把要缝的「靓号」密钥导入到现在的计算机，然后检查下导入的密钥&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token parameter variable&#34;&gt;-k&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;就像「爱情不是你想买就能买」，主密钥也不是你想设置哪个就用哪个。这些算号程序的本质就是修改密钥生成的时间戳，来获得新的随机密钥指纹，我们可以看到导入密钥的生成时间 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmRlamF2dS5tb2UvcG9zdHMvdGhlLXNjaWVudGlmaWMtdmFuaXR5LXBncC1jb3VudGluZy1ndWlkZS8jZm46NQ==&#34;&gt;5&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://blog.dejavu.moe/posts/the-scientific-vanity-pgp-counting-guide/import-keys.webp&#34; alt=&#34;import keys&#34; /&gt;import keys&lt;/p&gt;
&lt;p&gt;在缝合密钥的时候，有个大前提：主密钥的生成时间必须比子密钥要早 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmRlamF2dS5tb2UvcG9zdHMvdGhlLXNjaWVudGlmaWMtdmFuaXR5LXBncC1jb3VudGluZy1ndWlkZS8jZm46Ng==&#34;&gt;6&lt;/span&gt;。因此对于上面的一组待缝合密钥，只有生成时间最早的那个「靓号」可以做为主密钥。&lt;/p&gt;
&lt;h3 id=&#34;添加-uid&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#添加-uid&#34;&gt;#&lt;/a&gt; 添加 UID&lt;/h3&gt;
&lt;p&gt;GPU 算号程序生成的密钥都是空 UID，我们要生成一个新的 UID 并删除之前的空 UID&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg --edit-key A364444444444444	&lt;span class=&#34;token comment&#34;&gt;# 编辑主密钥&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;GnuPG&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.3&lt;/span&gt;.7&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; Copyright &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2021&lt;/span&gt; Free Software Foundation, Inc.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;This is &lt;span class=&#34;token function&#34;&gt;free&lt;/span&gt; software: you are &lt;span class=&#34;token function&#34;&gt;free&lt;/span&gt; to change and redistribute it.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;There is NO WARRANTY, to the extent permitted by law.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Secret key is available.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec  ed25519/A364444444444444&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2021&lt;/span&gt;-10-04  expires: never       usage: SCA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     trust: unknown       validity: unknown&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; unknown&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;. NONAME&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; adduid	&lt;span class=&#34;token comment&#34;&gt;# 添加 UID&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Real name: Tony Tim	&lt;span class=&#34;token comment&#34;&gt;# 名称&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Email address: tony.tim@dejavu.moe	&lt;span class=&#34;token comment&#34;&gt;#邮箱&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Comment:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;You selected this &lt;span class=&#34;token environment constant&#34;&gt;USER&lt;/span&gt;-ID:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;    &lt;span class=&#34;token string&#34;&gt;&#34;Tony Tim &amp;lt;tony.tim@dejavu.moe&gt;&#34;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Change &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;N&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;ame, &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;omment, &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;E&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;mail or &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;O&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;kay/&lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;uit? Q&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; uid &lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;# 选择空的 UID&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec  ed25519/A364444444444444&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2021&lt;/span&gt;-10-04  expires: never       usage: SCA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     trust: unknown       validity: unknown&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; unknown&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;* NONAME&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; unknown&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;. Tony Tim &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;tony.tim@dejavu.moe&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; deluid	&lt;span class=&#34;token comment&#34;&gt;# 删除空的 UID&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Really remove this user ID? &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y/N&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; y	&lt;span class=&#34;token comment&#34;&gt;# 确认删除&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec  ed25519/A364444444444444&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2021&lt;/span&gt;-10-04  expires: never       usage: SCA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     trust: unknown       validity: unknown&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; unknown&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;. Tony Tim &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;tony.tim@dejavu.moe&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;save	&lt;span class=&#34;token comment&#34;&gt;# 保存修改&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;查看时间戳&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看时间戳&#34;&gt;#&lt;/a&gt; 查看时间戳&lt;/h3&gt;
&lt;p&gt;即将缝合的子密钥 0xCF88999999999999，假设要给它的用途是 Sign (签名)，查看生成密钥的时间戳&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token parameter variable&#34;&gt;-k&lt;/span&gt; --with-colons&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;图中框住的部分就是接下来需要的时间戳&lt;/p&gt;
&lt;p&gt;&lt;img data-src=&#34;https://blog.dejavu.moe/posts/the-scientific-vanity-pgp-counting-guide/timestamp.webp&#34; alt=&#34;PGP TimeStamp&#34; /&gt;PGP TimeStamp&lt;/p&gt;
&lt;h3 id=&#34;查看-keygrip查看子密钥对应的-keygrip-并记录备用&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#查看-keygrip查看子密钥对应的-keygrip-并记录备用&#34;&gt;#&lt;/a&gt; 查看 Keygrip 查看子密钥对应的 Keygrip 并记录备用&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token parameter variable&#34;&gt;-k&lt;/span&gt; --with-keygrip&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h3 id=&#34;开始缝合&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始缝合&#34;&gt;#&lt;/a&gt; 开始缝合&lt;/h3&gt;
&lt;h3 id=&#34;开始缝合子密钥到主密钥上编辑我们的主密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#开始缝合子密钥到主密钥上编辑我们的主密钥&#34;&gt;#&lt;/a&gt; 开始缝合子密钥到主密钥上，编辑我们的主密钥&lt;/h3&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token parameter variable&#34;&gt;--expert&lt;/span&gt; --faked-system-time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;[生成子密钥的时间戳]\!&#34;&lt;/span&gt; --ignore-time-conflict --edit-key &lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt;主密钥 KeyID&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;比如我用来演示的：&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token parameter variable&#34;&gt;--expert&lt;/span&gt; --faked-system-time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1642330159\!&#34;&lt;/span&gt; --ignore-time-conflict --edit-key A364444444444444&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;缝合的最后步骤&lt;/p&gt;
&lt;figure class=&#34;highlight bash&#34;&gt;&lt;figcaption data-lang=&#34;bash&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token parameter variable&#34;&gt;--expert&lt;/span&gt; --faked-system-time&lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;token string&#34;&gt;&#34;1642330159\!&#34;&lt;/span&gt; --ignore-time-conflict --edit-key A364444444444444&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;GnuPG&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2.3&lt;/span&gt;.7&lt;span class=&#34;token punctuation&#34;&gt;;&lt;/span&gt; Copyright &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;C&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;2021&lt;/span&gt; Free Software Foundation, Inc.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;This is &lt;span class=&#34;token function&#34;&gt;free&lt;/span&gt; software: you are &lt;span class=&#34;token function&#34;&gt;free&lt;/span&gt; to change and redistribute it.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;There is NO WARRANTY, to the extent permitted by law.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;5&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;6&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg: WARNING: running with faked system time: &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;-01-16 &lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;:49:19&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;7&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Secret key is available.&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;8&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;9&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec  ed25519/A364444444444444&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;10&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2021&lt;/span&gt;-10-04  expires: never       usage: SCA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;11&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     trust: unknown       validity: unknown&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;12&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; unknown&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;. Tony Tim &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;tony.tim@dejavu.moe&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;13&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;14&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; addkey	&lt;span class=&#34;token comment&#34;&gt;# 添加子密钥&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;15&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please &lt;span class=&#34;token keyword&#34;&gt;select&lt;/span&gt; what kind of key you want:&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;16&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;3&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; DSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sign only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;17&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;4&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; RSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sign only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;18&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;5&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Elgamal &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;encrypt only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;19&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;6&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; RSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;encrypt only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;20&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;7&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; DSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;set your own capabilities&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;21&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;8&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; RSA &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;set your own capabilities&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;22&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;10&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ECC &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;sign only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;23&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;11&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ECC &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;set your own capabilities&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;24&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;12&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; ECC &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;encrypt only&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;25&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Existing key&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;26&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;14&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Existing key from card&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;27&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? &lt;span class=&#34;token number&#34;&gt;13&lt;/span&gt;	&lt;span class=&#34;token comment&#34;&gt;# 选择从现有密钥中导入&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;28&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Enter the keygrip: 9195F96C656FB6D919D42D8FAB1A27ACD8E2C0ED	&lt;span class=&#34;token comment&#34;&gt;# 子密钥对应的 Keygrip&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;29&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;30&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Possible actions &lt;span class=&#34;token keyword&#34;&gt;for&lt;/span&gt; this ECC key: Sign Authenticate	&lt;span class=&#34;token comment&#34;&gt;# 子密钥可用的用途&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;31&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Current allowed actions: Sign	&lt;span class=&#34;token comment&#34;&gt;# 子密钥现在的用途&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;32&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;33&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;S&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Toggle the sign capability	&lt;span class=&#34;token comment&#34;&gt;# 切换签名用途&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;34&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;A&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Toggle the authenticate capability	&lt;span class=&#34;token comment&#34;&gt;# 切换认证用途&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;35&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;   &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;Q&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; Finished&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;36&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;37&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Your selection? Q	&lt;span class=&#34;token comment&#34;&gt;# 完成&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;38&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Please specify how long the key should be valid.	&lt;span class=&#34;token comment&#34;&gt;# 选择过期时间&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;39&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;         &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt; &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key does not expire&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;40&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;  &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key expires &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; n days&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;41&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;w &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key expires &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; n weeks&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;42&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;m &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key expires &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; n months&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;43&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;      &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;n&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;y &lt;span class=&#34;token operator&#34;&gt;=&lt;/span&gt; key expires &lt;span class=&#34;token keyword&#34;&gt;in&lt;/span&gt; n years&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;44&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Key is valid for? &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; &lt;span class=&#34;token number&#34;&gt;0&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;45&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Key does not expire at all&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;46&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Is this correct? &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y/N&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;47&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;Really create? &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;y/N&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt; y&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;48&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;49&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;sec  ed25519/A364444444444444&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;50&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2021&lt;/span&gt;-10-04  expires: never       usage: SCA&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;51&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     trust: unknown       validity: unknown&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;52&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;ssb  ed25519/CF88999999999999&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;53&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;     created: &lt;span class=&#34;token number&#34;&gt;2022&lt;/span&gt;-01-16  expires: never       usage: S&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;54&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;[&lt;/span&gt; unknown&lt;span class=&#34;token punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;token punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;token number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;)&lt;/span&gt;. Tony Tim &lt;span class=&#34;token operator&#34;&gt;&amp;lt;&lt;/span&gt;tony.tim@dejavu.moe&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;55&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;56&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;gpg&lt;span class=&#34;token operator&#34;&gt;&gt;&lt;/span&gt; save	&lt;span class=&#34;token comment&#34;&gt;# 保存&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;现在我们的第一个用途为 Sign (签名) 的子密钥就缝合到主密钥上了，可以按照上面的步骤继续「缝合」其他用途的子密钥。&lt;/p&gt;
&lt;p&gt;现在，少年！请带上你的 PGP 靓号去尽情冲 (zhuang) 浪 (bi) 吧！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;参考资料&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zZWN1cml0eS5zdGFja2V4Y2hhbmdlLmNvbS9xdWVzdGlvbnMvMzI5MzUvbWlncmF0aW5nLWdwZy1tYXN0ZXIta2V5cy1hcy1zdWJrZXlzLXRvLW5ldy1tYXN0ZXIta2V5LzE2MDg0NyMxNjA4NDc=&#34;&gt;Migrating GPG master keys as subkeys to new master key - Information Security Stack Exchange&lt;/span&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr /&gt;
&lt;ol&gt;
&lt;li&gt;在 Windows 上没测试，但是用 WSL2 算号应该也是极好的&lt;/li&gt;
&lt;li&gt;是的，你没看多，算力超过百亿 10,200,000,000 hash/s&lt;/li&gt;
&lt;li&gt;常见的显卡，比如 1050Ti、1060、2060、3060 速度都比纯 CPU 算号的要快得多&lt;/li&gt;
&lt;li&gt;如果你在上面算的「靓号」无法更改密钥用途（change-usage），请删除现在的 UID，新建一个即可&lt;/li&gt;
&lt;li&gt;所以生成「靓号」的密钥可能生成时间是几年前或者几个月前都是正常的，比如某群友算出个生成时间是 2013 年的密钥&lt;/li&gt;
&lt;li&gt;要不然后面「缝合」后的密钥会出现问题&lt;/li&gt;
&lt;/ol&gt;
</content>
        <category term="PGP" />
        <updated>2024-03-21T14:55:02.000Z</updated>
    </entry>
    <entry>
        <id>https://sakurame.eu.org/2023/06/09/privacy/PGP%E7%9A%84%E9%97%AE%E9%A2%98/</id>
        <title>PGP的问题</title>
        <link rel="alternate" href="https://sakurame.eu.org/2023/06/09/privacy/PGP%E7%9A%84%E9%97%AE%E9%A2%98/"/>
        <content type="html">&lt;h1 id=&#34;译pgp的问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#译pgp的问题&#34;&gt;#&lt;/a&gt; 「译」PGP 的问题&lt;/h1&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9sYXRhY29yYS5taWNyby5ibG9nLzIwMTkvMDcvMTYvdGhlLXBncC1wcm9ibGVtLmh0bWw=&#34;&gt;原文链接&lt;/span&gt; ，原作者为 Latacora，一个国外安全团队。&lt;/p&gt;
&lt;p&gt;几十年来（一点不夸张地），&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9ibG9nLmNyeXB0b2dyYXBoeWVuZ2luZWVyaW5nLmNvbS8yMDE0LzA4LzEzL3doYXRzLW1hdHRlci13aXRoLXBncC8=&#34;&gt;密码学工程师们一直为 PGG 的缺陷 &lt;/span&gt;  困扰得拽头发。&lt;/p&gt;
&lt;p&gt;当其他领域的工程师得知这个消息时，他们会感到震惊 。啥？ PGP 不行？那为啥人们总是告诉我用 PGP?&lt;/p&gt;
&lt;p&gt;答案是他们不应该告诉你， 因为 PGP 就是不行， 需要被淘汰。&lt;/p&gt;
&lt;p&gt;正如你将要看到的，PGP 有非常多的问题。&lt;/p&gt;
&lt;p&gt;幸运的是， 如果你并不是病态地好奇， 它有一个简单的元问题：它是 20 世纪 90 年代设计的，在严肃的现代密码学诞生之前。&lt;/p&gt;
&lt;p&gt;（如今）没有一个合格的密码工程师会设计一个像今天的 PGP 一样的系统， 也不会容忍它在其他设计中的大部分缺陷。&lt;/p&gt;
&lt;p&gt;严肃的密码学家们在很大程度上已经放弃了 PGP， 并不再花时间为它发表论文 (&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudXNlbml4Lm9yZy9zeXN0ZW0vZmlsZXMvY29uZmVyZW5jZS91c2VuaXhzZWN1cml0eTE4L3NlYzE4LXBvZGRlYm5pYWsucGRm&#34;&gt;有一个明显的例外&lt;/span&gt;)。&lt;/p&gt;
&lt;p&gt;由于这个原因，PGP 中被充分理解的问题已经有十多年没有得到解决了。&lt;/p&gt;
&lt;p&gt;有两点要注意:： 第一，  我们这篇文章是为工程师写的， 不是为律师和活动家写的。&lt;/p&gt;
&lt;p&gt;第二， “PGP “可以指一堆东西，从 OpenPGP 标准到 GnuPG 的参考实现。&lt;strong&gt;我们用 “PGP “这个词来涵盖所有这些东西&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;问题&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#问题&#34;&gt;#&lt;/a&gt; 问题&lt;/h2&gt;
&lt;h3 id=&#34;荒谬的复杂性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#荒谬的复杂性&#34;&gt;#&lt;/a&gt; 荒谬的复杂性&lt;/h3&gt;
&lt;p&gt;由于一些我们这些未来人都不理解的原因，  PGP 有一个基于数据包的结构。&lt;/p&gt;
&lt;p&gt;PGP 信息（包含在 “.asc” 文件中）是类型化数据包的存档。 根据您使用的是 “新” 还是 “旧” 格式的数据包，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90b29scy5pZXRmLm9yZy9odG1sL3JmYzQ4ODAjcGFnZS0xMw==&#34;&gt;至少有 8 种不同的方法&lt;/span&gt;可以对数据包的长度进行编码。&lt;/p&gt;
&lt;p&gt;新格式的数据包长度是可变的，如 BER（尝试编写 PGP 实现，您可能会希望 ASN.1 的 sweet release）。包可以有子包。某些数据包有重叠的变体。&lt;/p&gt;
&lt;p&gt;最近发生的公钥服务器攻击是因为 GnuPG 在解析密钥时&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly90aHJlYWRyZWFkZXJhcHAuY29tL3RocmVhZC8xMTQ3MTYyNTgzOTY5MDA5NjY0Lmh0bWw=&#34;&gt;意外出现指数级增长&lt;/span&gt;，这也是遵循这种发癫的格式。&lt;/p&gt;
&lt;p&gt;以上只是编码的问题。&lt;/p&gt;
&lt;p&gt;实际用起来的时候，系统并不会更简单： 有主密钥和子密钥，密钥 ID、公钥服务器和密钥签名，只有签名的和只有加密的，多个 “密钥环”，撤销证书，三种不同的压缩格式。&lt;/p&gt;
&lt;p&gt;这些还都是在我们谈到智能卡支持之前。&lt;/p&gt;
&lt;h3 id=&#34;瑞士军刀式的设计&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#瑞士军刀式的设计&#34;&gt;#&lt;/a&gt; 瑞士军刀式的设计&lt;/h3&gt;
&lt;p&gt;如果你被困在森林里里，我不清楚，需要修理你的牛仔裤袖口，如果你的多功能刀有一把剪刀，那就很方便了。但是，没有一个做正经工作的人经常使用他们的多功能刀的剪刀。&lt;/p&gt;
&lt;p&gt;一把瑞士军刀能做一堆事情，但都做得很差：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;PGP 在签名方面做得很平庸&lt;/li&gt;
&lt;li&gt;在用密码加密方面做得相对较差&lt;/li&gt;
&lt;li&gt;在用公钥加密方面做得相当糟糕&lt;/li&gt;
&lt;li&gt;PGP 并不是一个安全传输文件的好方&lt;/li&gt;
&lt;li&gt;它是一个笨拙的签名包的方式&lt;/li&gt;
&lt;li&gt;它在保护备份方面不是很好&lt;/li&gt;
&lt;li&gt;它是一种完全危险的安全信息交流方式&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;回到 PGP 起源的 MC Hammer 时代，“加密” 只是 “一件” 特殊的事： 有一个工具用来（单纯地）发送文件，或只是备份一个目录，又用另外的工具来加密和签名文件。&lt;/p&gt;
&lt;p&gt;而现代密码学不是这样运行的， （不同加密算法）有其专门的目的。 例如，安全地传递消息也需要加密，一种不同于安全备份或包签名的加密。&lt;/p&gt;
&lt;h3 id=&#34;陷入兼容旧版的泥潭&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#陷入兼容旧版的泥潭&#34;&gt;#&lt;/a&gt; 陷入兼容旧版的泥潭&lt;/h3&gt;
&lt;p&gt;PGP 早于现代密码学；比 Hanson 的专辑还要久远的年代。&lt;/p&gt;
&lt;p&gt;如果幸运的话，您的本地 GnuPG 默认为 2048 位 RSA、CFB 中的 64 位块 CAST5 密码和 OpenPGP MDC 校验和（稍后会详细介绍）。&lt;/p&gt;
&lt;p&gt;如果您使用密码而不是公钥进行加密，OpenPGP 协议会指定了 PGP 的 S2K 密码 KDF。委婉地说，这些不是密码工程师为现代系统选择的原语。&lt;/p&gt;
&lt;p&gt;自从 Steve Urkel 在 ABC 的 TGIF 节目中出现以来，我们学到了很多：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;你应该验证你的密文（并避免 CFB 模式）将是一个明显的例子。&lt;/li&gt;
&lt;li&gt;64 位分组密码并不好，我们可以做很多比 RSA 更好的事。&lt;/li&gt;
&lt;li&gt;混合压缩和加密是危险的，而且 KDF 应该是时间和内存困难的。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;无论 OpenPGP RFC 怎么说，如果您使用 PGP，您可能不会做任何这些事情，也无法预测何时会做。&lt;/p&gt;
&lt;p&gt;以 AEAD 密码为例：Rust 语言的 Sequoia PGP 默认为 AES-EAX AEAD 模式，这很好，没有人可以阅读这些消息。 而因为大多数 PGP 安装者并不知道 EAX 模式是什么，这就不太好了。&lt;/p&gt;
&lt;p&gt;每个众所周知的坏密码系统最终都会产生一个支持曲线或 AEAD 的 RFC 扩展，以便其支持者可以在留言板上声称他们支持现代密码学。&lt;/p&gt;
&lt;p&gt;RFC 无关紧要：只有安装 PGP 的这些基本盘才重要。&lt;/p&gt;
&lt;p&gt;我们已经搞了认证加密这一套 20 年了，PGP 已经足够成熟了，它都能自己去超市给我买酒了。（抱歉&lt;/p&gt;
&lt;p&gt;您可以选择兼容 1990 年代的旧版本，也可以选择拥有健全的密码学。 &lt;strong&gt;但你并不能同时拥有&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;令人讨厌的用户体验&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#令人讨厌的用户体验&#34;&gt;#&lt;/a&gt; 令人讨厌的用户体验&lt;/h3&gt;
&lt;p&gt;我们不能说得比 Ted Unangst 更好了：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;几年前进行了一项 PGP 可用性研究，其中一组技术人员被安置在一个有计算机的房间里，并要求设置 PGP。 两个小时后，这些人没了，消失了，杳无音讯&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如果您想要自己的经验数据来支持这一点，您可以进行以下实验：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;找到一位移民律师，并与他们讨论让 Signal 在他们的手机上工作的过程&lt;/li&gt;
&lt;li&gt;你可能不会马上体验到它的美味&lt;/li&gt;
&lt;li&gt;现在尝试（把 Signal 换成） PGP 来做这件事&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;长期的密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#长期的密钥&#34;&gt;#&lt;/a&gt; 长期的密钥&lt;/h3&gt;
&lt;p&gt;PGP 请求用户保留与他们的身份相关联的几乎永久的根密钥。&lt;/p&gt;
&lt;p&gt;它通过使 密钥生成和交换变得烦人、“密钥签署 Party” , 以及创建一个 “信任网”（Web Of Trust）, 使密钥依赖于其他密钥 ，来做到这一点。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93b3Jkcy5maWxpcHBvLmlvL2dpdmluZy11cC1vbi1sb25nLXRlcm0tcGdwLw==&#34;&gt;长期密钥几乎从来都不是您想要的&lt;/span&gt;。如果您持续地使用密钥，它最终都会泄漏。&lt;/p&gt;
&lt;p&gt;您希望妥协的爆炸半径尽可能小，而且同样重要的是，你不希望用户在对他们目前的密钥的安全有任何担心的情况下，对启用新密钥的想法有任何犹豫。&lt;/p&gt;
&lt;p&gt;PGP 氛围组马上就会回复：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“这就是为什么你要把密钥放在 Yubikey 里～”&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;大致上来说，全世界没有人使用昂贵的 Yubikey 来做这个，而且你也别期待未来会发生。 （我们连 U2F 的推广都进行不动，而且这些密钥是一次性的）。&lt;/p&gt;
&lt;p&gt;我们不能仅仅为了让 Unix 书呆子对他们的玩具感觉更好，而接受糟糕的密码系统。&lt;/p&gt;
&lt;h3 id=&#34;身份验证的崩溃&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#身份验证的崩溃&#34;&gt;#&lt;/a&gt; 身份验证的崩溃&lt;/h3&gt;
&lt;p&gt;更多关于 PGP 的古老原语：早在 2000 年，OpenPGP 工作组就意识到他们需要对密文进行身份验证，而 PGP 的签名并没有做到这一点。&lt;/p&gt;
&lt;p&gt;因此 OpenPGP 发明了 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cucmZjLWVkaXRvci5vcmcvcmZjL3JmYzQ4ODAjc2VjdGlvbi01LjE0&#34;&gt;MDC 系统&lt;/span&gt;：带有 MDC 的 PGP 消息将明文的 SHA-1 附加到明文，然后在 CFB 模式下加密（跟平常那样）。&lt;/p&gt;
&lt;p&gt;如果您想知道当现代系统使用相对复杂的 AEAD 模式时 PGP 如何解决这个问题（为什么每个人都不能将 SHA-1 添加到他们的明文中），您并不孤单。&lt;/p&gt;
&lt;p&gt;从哪里开始使用这个 Rube Goldberg 装置呢？PGP MDC 可以被剥离消息 —— 它的编码方式是你可以简单地截掉密文的最后 22 个字节来做到这一点。&lt;/p&gt;
&lt;p&gt;为了保持与不安全的旧信息的兼容性，PGP 引入了一种新的数据包类型来表示需要验证 MDC；如果您使用了错误的类型，则不会检查 MDC。&lt;/p&gt;
&lt;p&gt;即使您这样做了，新的 SEIP 数据包格式也与不安全的 SE 格式非常接近，可能会诱使读取方降级；&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tYWlsYXJjaGl2ZS5pZXRmLm9yZy9hcmNoL21zZy9vcGVucGdwL3RCMDB2TzVyLXFuZVg5d3oxeHozbmV0cFhWVS8=&#34;&gt;Trevor Perrin 将 SEIP 设计为 16 个完整的安全位&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;最后，即使一切顺利，Reference 的 PGP 实现也会（等待它）向调用者发送未经身份验证的明文，&lt;em&gt;即使 MDC 不匹配&lt;/em&gt;。&lt;/p&gt;
&lt;h3 id=&#34;不连贯的身份&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#不连贯的身份&#34;&gt;#&lt;/a&gt; 不连贯的身份&lt;/h3&gt;
&lt;p&gt;PGP 是一个应用程序 它是与其他应用程序的一组集成 它是一种文件格式 它也是一个社交网络 也是一种亚文化。&lt;/p&gt;
&lt;p&gt;PGP 推动了加密身份的概念：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;您生成一个密钥，将其保存在您的密钥环中，在您的名片上打印其指纹，然后将其发布到密钥服务器。&lt;/li&gt;
&lt;li&gt;你在别人的密钥上签名。&lt;/li&gt;
&lt;li&gt;他们反过来可能会也可能不会依赖您的签名来验证其他密钥。&lt;/li&gt;
&lt;li&gt;有些人会特意亲自与其他 PGP 用户会面，以交换密钥并更安全地连接到这个 “信任网络”。&lt;/li&gt;
&lt;li&gt;还有一些人会组织 “密钥签署 Party”。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;您现在在脑海中勾勒出的图像准确地解释了 PGP 的拥护者们切换到更新的东西有多难。&lt;/p&gt;
&lt;p&gt;不过这种黏在一起的身份没啥用。&lt;/p&gt;
&lt;p&gt;普通人会相信任何看起来像 PGP 密钥的东西，而不是密钥签名信任网络，不是密钥服务器，不是那些 Party ，无论它来自哪儿 —— 他们怎么可能不信？ 即使是专家也很难阐明如何评估密钥。&lt;/p&gt;
&lt;p&gt;专家不信任他们没有亲自交换过的密钥。其他所有的人都依赖一个中心化的机构来分发密钥。 PGP 的密钥分发机制是场闹剧。&lt;/p&gt;
&lt;h3 id=&#34;泄露元数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#泄露元数据&#34;&gt;#&lt;/a&gt; 泄露元数据&lt;/h3&gt;
&lt;p&gt;先不说电子邮件的问题 (我们稍后会说到)， PGP 本身就泄露了元数据。&lt;/p&gt;
&lt;p&gt;信息 (在正常使用情况下) 直接与密钥标识符相连，而密钥标识符在整个 PGP 的信任网中与用户身份相连。&lt;/p&gt;
&lt;p&gt;此外，很大一部分 PGP 用户使用密钥服务器，这些密钥服务器本身也会向网络泄露哪些 PGP 用户正在相互通信的身份。&lt;/p&gt;
&lt;h3 id=&#34;无前向保密性&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#无前向保密性&#34;&gt;#&lt;/a&gt; 无前向保密性&lt;/h3&gt;
&lt;p&gt;PGP 的最后一个问题，有一个很好的例子：安全消息传递加密要求前向保密。&lt;/p&gt;
&lt;p&gt;前向保密意味着，如果你今天向攻击者 “Say Hi”，并丢了一只密钥，他们仍然不能去阅读到昨天的消息；他们必须在昨天带着密钥在那里才能阅读它们。&lt;/p&gt;
&lt;p&gt;在现代密码学工程中，我们假设我们的对手正在将所有内容记录到无限存储中。PGP 声称的对手包括世界各国政府，其中许多政府确实在这样做。针对强大的对手并且没有前向保密，被破解是 “何时” 的问题，而不是 “如果” 的问题。&lt;/p&gt;
&lt;p&gt;为了在实践中实现保密，您通常会保留两个密钥：一个短期会话密钥和一个长期可信密钥。 会话密钥是临时的（通常是 DH 交换的产物）并且受信任的密钥对其进行签名，因此中间人无法交换自己的密钥。&lt;/p&gt;
&lt;p&gt;理论上，使用 PGP 提供的工具可以实现前向保密的雏形。当然，几乎没有人这样做。&lt;/p&gt;
&lt;h3 id=&#34;笨拙的密钥&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#笨拙的密钥&#34;&gt;#&lt;/a&gt; 笨拙的密钥&lt;/h3&gt;
&lt;p&gt;OpenBSD 的  &lt;code&gt;signify(1)&lt;/code&gt;  公钥是一个 Base64 字符串，短到可以放在电子邮件的句子中间；如果是私钥，不是交换格式，只比公钥长了一行左右。&lt;/p&gt;
&lt;p&gt;PGP 公钥是一个巨大的 Base64 文档；如果您经常使用它们，那么您可能已经习惯于将它们添加到附件，而不是将它们粘贴到消息中，这样它们就不会被损坏。&lt;/p&gt;
&lt;p&gt;Signify 的密钥是最先进的 Ed25519 密钥；PGP 是较弱的 RSA 密钥。&lt;/p&gt;
&lt;p&gt;您可能认为这些东西无关紧要，但它很重要；使用 SSH 和管理 SSH 密钥的人比使用 PGP 的人多几个数量级。SSH 密钥处理起来很简单，而 PGP 不是。&lt;/p&gt;
&lt;h3 id=&#34;协商&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#协商&#34;&gt;#&lt;/a&gt; 协商&lt;/h3&gt;
&lt;p&gt;PGP 支持 ElGamal。PGP 支持 RSA。PGP 支持 NIST P 曲线。PGP 支持 Brainpool。PGP 支持  Curve25519。PGP 支持 SHA-1。PGP 支持 SHA-2。PGP 支持 RIPEMD160。PGP 支持 IDEA。PGP 支持 3DES。PGP 支持 CAST5。PGP 支持 AES。这不可能是 PGP 支持的完整列表。&lt;/p&gt;
&lt;p&gt;如果我们在过去 20 年中学到了关于密码学设计的 3 件重要的事情，其中至少 2 件是&lt;strong&gt;协商和兼容性是恶魔&lt;/strong&gt;。密码系统中的缺陷往往出现在细枝末节中，而不是主干上，而广泛的密码兼容性增加了细节的数量。&lt;/p&gt;
&lt;p&gt;像 TLS 1.3 这样的现代协议正在抛弃与 RSA 等东西的兼容性，而不是添加它。新系统只支持一套原语 和一个简单的版本号。如果这些原语之一失败，您会立即更改版本并放弃旧协议。&lt;/p&gt;
&lt;p&gt;如果我们不走运，20 年后人们仍在使用 PGP，那么 PGP 将是任何地方的任何代码会包含 CAST5 的唯一原因。&lt;/p&gt;
&lt;p&gt;我们不能说得再清楚或者再啰嗦了：您可以选择兼容 1990 年代的旧版本，也可以选择拥有健全的密码学。 &lt;strong&gt;但你并不能同时拥有&lt;/strong&gt;。&lt;/p&gt;
&lt;h3 id=&#34;简陋的代码&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#简陋的代码&#34;&gt;#&lt;/a&gt; 简陋的代码&lt;/h3&gt;
&lt;p&gt;PGP 的实际标准实现是 GnuPG。GnuPG 不是精心构建的。&lt;/p&gt;
&lt;p&gt;这是一个庞大的 C 语言代码库，具有重复的功能（例如，最近的 SKS 密钥解析 DoS 的记录指出它有多个密钥解析器）具有从内存损坏 到加密侧信道的 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cuY3ZlZGV0YWlscy5jb20vdnVsbmVyYWJpbGl0eS1saXN0L3ZlbmRvcl9pZC00NzExL0dudXBnLmh0bWw=&#34;&gt;CVE 的长期跟踪记录&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;有时可以在 GnuPG 不注意的情况下将身份验证器从消息中剥离。有可能在它没有注意到的情况下向它提供没有正确指纹的密钥。2018 Efail 漏洞是因为它向调用者发布未经身份验证的明文。&lt;/p&gt;
&lt;p&gt;GnuPG 就是不行。&lt;/p&gt;
&lt;p&gt;GnuPG 也是 PGP 的有效参考实现，也是集成 PGP 加密的大多数其他工具的基础。 它哪儿也不会去，依赖 PGP 就是依赖 GPG。&lt;/p&gt;
&lt;h2 id=&#34;答案&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#答案&#34;&gt;#&lt;/a&gt; 答案&lt;/h2&gt;
&lt;p&gt;说服人们停止使用 PGP 的挑战之一是没有一种东西可以取代它，也不应该有。&lt;/p&gt;
&lt;p&gt;你应该用什么来取代它，取决于你要做什么。&lt;/p&gt;
&lt;h3 id=&#34;与人交流&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#与人交流&#34;&gt;#&lt;/a&gt; 与人交流&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;译注： 我不太认同作者这部分的观点，Signal 并不是什么更好的选择（WhatsApp 更不是 。 首先你能期待一个必须要手机号才能使用的软件给你什么安全？ （cue 一下 Telegram  。&lt;br /&gt;
更多不推荐的理由，可以参考 sourcehut 创始人 Drew DeVault 的文章 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kcmV3ZGV2YXVsdC5jb20vMjAxOC8wOC8wOC9TaWduYWwuaHRtbA==&#34;&gt;I don’t trust Signal&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;使用 Signal。或者 Wire，或者 WhatsApp，或者其他基于 Signal 协议的安全通信软件。&lt;/p&gt;
&lt;p&gt;现代安全即时通讯是围绕着信息传递而建立的。它们使用保护隐私的认证握手、可拒绝的信息、在每个信息交换中重新加密的加密棘轮，当然还有现代的加密原语。&lt;/p&gt;
&lt;p&gt;即时通讯软件的使用非常简单，而且不需要为密钥和子密钥而大费周章。&lt;/p&gt;
&lt;p&gt;如果你使用 Signal，你会得到更多：你会得到一个对将私人元数据保存在服务器上如此偏执的系统，它对 Giphy 搜索进行隧道化处理以避免流量分析攻击，而且直到最近还不支持用户配置文件。&lt;/p&gt;
&lt;h3 id=&#34;加密电子邮件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密电子邮件&#34;&gt;#&lt;/a&gt; 加密电子邮件&lt;/h3&gt;
&lt;p&gt;不。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9uZXdzLnljb21iaW5hdG9yLmNvbS9pdGVtP2lkPTE2MDg4Mzg2&#34;&gt;电子邮件不安全&lt;/span&gt;。即使使用  PGP，它也是默认明文，这意味着即使您做对了所有事情，您邮寄的某个完全可信的人，做完全合理的事情，总是会将您加密消息的引用明文抄送给其他人（我们不知道没有看到这种情况发生的 PGP 电子邮件用户）。PGP 电子邮件是转发不安全的。包括主题（字面意思是消息内容）在内的电子邮件元数据始终是纯文本的。&lt;/p&gt;
&lt;p&gt;如果您需要其他理由，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudXNlbml4Lm9yZy9zeXN0ZW0vZmlsZXMvY29uZmVyZW5jZS91c2VuaXhzZWN1cml0eTE4L3NlYzE4LXBvZGRlYm5pYWsucGRm&#34;&gt;请阅读 Efail 论文&lt;/span&gt;。&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93ZWIuYXJjaGl2ZS5vcmcvd2ViLzIwMTgxMjI1MjE0NzMwL2h0dHBzOi8vZmxha2VkLnNvY2twdXBwZXQub3JnLzIwMTgvMDUvMTYvYS11bmlmaWVkLXRpbWVsaW5lLmh0bWw=&#34;&gt;对 Efail 的披露处理不当&lt;/span&gt;的 GnuPG 社区对这项研究进行了大量讨论，但它被 Usenix Security（顶级学术软件安全活动之一）和 Black Hat USA（顶级行业软件安全活动）承认，是过去 5 年中最好的加密攻击之一，是对 PGP 生态系统的毁灭性指控。 正如您将从论文中看到的那样，S/MIME 并不好。&lt;/p&gt;
&lt;p&gt;这不可能被修复。要制作真正安全的电子邮件，你必须在电子邮件上建立另一种协议的隧道  （您仍然会承受流量分析攻击）。都这样了，又何必去伪装呢？&lt;/p&gt;
&lt;p&gt;加密电子邮件是自寻祸患。&lt;/p&gt;
&lt;p&gt;向有风险的用户推荐电子邮件加密是一种不当行为。 任何告诉您通过 PGP 加密的电子邮件进行通信是安全的人都将他们奇怪的偏好置于您的安全之上。&lt;/p&gt;
&lt;h3 id=&#34;发送文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#发送文件&#34;&gt;#&lt;/a&gt; 发送文件&lt;/h3&gt;
&lt;p&gt;使用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL21hZ2ljLXdvcm1ob2xlL21hZ2ljLXdvcm1ob2xl&#34;&gt; Magic Wormhole&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;虫洞客户端使用一次性密码验证密钥交换 (PAKE) 将文件加密给收件人。&lt;/p&gt;
&lt;p&gt;这很容易（至少对于 Nerd 们来说）、安全且有趣：我们还没有把虫洞介绍过给任何没有像我们一样立即开始欣喜地使用虫洞的人。&lt;/p&gt;
&lt;p&gt;有人马上发布了 Go 或 Rust 实现的 Magic Wormhole 的 Windows 安装程序， 它太棒了，我不允许还有人没装！&lt;/p&gt;
&lt;p&gt;如果您与律师而不是与技术人员合作，Signal 在保护文件传输方面做得非常好。 在您的安全页面上放置一个 Signal 账户以接收错误赏金报告，而不是 PGP 密钥。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;译注，Magic Wormhole 是一个命令行的文件传输工具。 推荐一个 web 版的，更易用一些的文件传输工具，名字也很像，叫 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93b3JtaG9sZS5hcHAv&#34;&gt;Wormhole&lt;/span&gt;，&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL1NvY2tldERldi93b3JtaG9sZS1jcnlwdG8=&#34;&gt;源码&lt;/span&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h3 id=&#34;加密备份&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密备份&#34;&gt;#&lt;/a&gt; 加密备份&lt;/h3&gt;
&lt;p&gt;使用 Tarsnap。&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cudGFyc25hcC5jb20vZGVzaWduLmh0bWw=&#34;&gt;Colin 可以告诉您有关 Tarsnap 如何优化以保护备份的所有信息&lt;/span&gt;。 或者说真的，使用许多其他人使用的任何其他加密备份工具； 它们不会像 Tarsnap 那样棒，但它们肯定都会比 PGP 做得更好。&lt;/p&gt;
&lt;p&gt;需要离线备份？使用加密的磁盘 image；它们内置于现代 Windows、Linux 和 macOS 中。 &lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9zb2NrcHVwcGV0Lm9yZy9ibG9nLzIwMTQvMDQvMzAveW91LWRvbnQtd2FudC14dHMv&#34;&gt;全盘加密不是很好&lt;/span&gt;，但它适用于这个用例，而且比 PGP 更容易、更安全。&lt;/p&gt;
&lt;h3 id=&#34;签署包&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#签署包&#34;&gt;#&lt;/a&gt; 签署包&lt;/h3&gt;
&lt;p&gt;使用 Signify/Minisign。&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly93d3cub3BlbmJzZC5vcmcvcGFwZXJzL2JzZGNhbi1zaWduaWZ5Lmh0bWw=&#34;&gt;ed Unangst 会告诉你一切&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;这是 OpenBSD 用来对包进行签名的东西。它非常简单并使用现代签名。&lt;/p&gt;
&lt;p&gt;&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9qZWRpc2N0MS5naXRodWIuaW8vbWluaXNpZ24v&#34;&gt;Minisign&lt;/span&gt; ，ibsodium 的专家 Frank Denis 写的 ，为 Windows 和 macOS 带来了相同的设计；Go、Rust、Python、Javascript 和 .NET 都有相关的包；它甚至与 Signify 兼容。&lt;/p&gt;
&lt;h3 id=&#34;加密app的数据&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密app的数据&#34;&gt;#&lt;/a&gt; 加密 App 的数据&lt;/h3&gt;
&lt;p&gt;用&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9naXRodWIuY29tL2plZGlzY3QxL2xpYnNvZGl1bQ==&#34;&gt; libsodium&lt;/span&gt;。&lt;/p&gt;
&lt;p&gt;它可以在任何地方构建，具有设计为难以误用的界面，并且您不必掏出一个二进制文件来使用它。&lt;/p&gt;
&lt;h3 id=&#34;加密文件&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#加密文件&#34;&gt;#&lt;/a&gt; 加密文件&lt;/h3&gt;
&lt;p&gt;这确实是个问题。&lt;/p&gt;
&lt;p&gt;如果你&lt;strong&gt;不是&lt;/strong&gt;在做备份，也&lt;strong&gt;不是&lt;/strong&gt;在为长期存储而离线存档，也&lt;strong&gt;不是&lt;/strong&gt;为了安全地将文件发送给别人而加密，也&lt;strong&gt;不是&lt;/strong&gt;为了完成工作而挂载 / 卸载的虚拟驱动器。&lt;/p&gt;
&lt;p&gt;那么现在没有一个好的工具可以做到这一点。Filippo Valsorda 正在研究这些用例的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9kb2NzLmdvb2dsZS5jb20vZG9jdW1lbnQvZC8xMXlIb20yMENyc3VYOEtRSlhCQncwNHM4MFVuanY4ekNnX0E3c1BBWF85WS92aWV3&#34;&gt; Age&lt;/span&gt;，我对此非常乐观，但它还没有完成。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;更新，2020 年 2 月&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;Filippo 的&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9hZ2UtZW5jcnlwdGlvbi5vcmc=&#34;&gt; age&lt;/span&gt; 已经公布。 这是一个可靠的设计，在 Go 和 Rust 中具有简单、易于审计的实现。&lt;/p&gt;
&lt;p&gt;您可以为每个主流平台构建二进制文件。&lt;/p&gt;
&lt;p&gt;age 当然比 PGP 年轻得多。但我会用我口袋里的所有钱来和你所有的钱打赌，在 Age 发现新的漏洞之前，PGP 这个庞然大物就会被发现（新的漏洞）。看 age 的了！&lt;/p&gt;
&lt;p&gt;希望大家能明白这是一个相当狭隘的用例。 我们从事软件安全工作并处理敏感数据，包括 Bug Bounty 报告（另一个超级常见的 “我们需要 PGP！” 用例），但我们几乎永远都不用碰 PGP！&lt;/p&gt;
&lt;h2 id=&#34;译后注&#34;&gt;&lt;a class=&#34;anchor&#34; href=&#34;#译后注&#34;&gt;#&lt;/a&gt; 译后注&lt;/h2&gt;
&lt;p&gt;在今天，PGP 俨然已经成为一种亚文化，很多独立博客作者，安全研究员，键政人都愿意在自己的个人资料里附上自己的 PGP 指纹。&lt;/p&gt;
&lt;p&gt;它作为密码学的象征， 对于开源和自由运动与集权抗争的象征意义，已经大于它的实际作用。&lt;/p&gt;
&lt;p&gt;复杂的用法并不会减损它的魅力，忽视诸多安全问题而给人虚假的安全感才是最致命的。（&lt;s&gt;虽然 99% 的人只是用来装逼，不会也找不到人去用&lt;/s&gt;&lt;/p&gt;
&lt;p&gt;我的建议就是，咱继续用它装逼就好，如果做高风险的事还是别用它了😂&lt;/p&gt;
&lt;p&gt;像原作者说的那样，用专业的工具去做专业的事。&lt;/p&gt;
&lt;p&gt;前面说过我并不推荐作者强推的 Signal，并给出了一些理由。那我们应该用什么呢？&lt;/p&gt;
&lt;p&gt;一个很好的替代品是&lt;span class=&#34;exturl&#34; data-url=&#34;aHR0cHM6Ly9tYXRyaXgub3JnLw==&#34;&gt; Matrix&lt;/span&gt;，一个「去中心化」的「端到端加密」的即时通讯软件。&lt;/p&gt;
&lt;p&gt;「去中心化」意味着很难被墙，「端到端加密」意味着安全。&lt;/p&gt;
&lt;p&gt;想必你也不会想去教八十岁的奶奶使用 OMEMO XMPP，或者给朋友推荐一圈某 T 字头全宇宙最好的聊天软体结果因为需要翻墙没人愿意折腾，最后就自己和自己安全地聊天吧。&lt;/p&gt;
&lt;p&gt;如果你也不想妥协继续使用微信，用 Matrix！&lt;/p&gt;
</content>
        <category term="PGP" />
        <updated>2023-06-09T07:21:27.000Z</updated>
    </entry>
</feed>
