{
    "version": "https://jsonfeed.org/version/1",
    "title": "Sakura • All posts by \"建站\" tag",
    "description": "一个专注于技术和思考分享的博客",
    "home_page_url": "https://sakurame.eu.org",
    "items": [
        {
            "id": "https://sakurame.eu.org/2023/05/16/basic-theory/%E9%9D%A2%E5%90%91cloudflare%E7%9A%84%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA-1%E5%88%86%E9%92%9F%E5%BF%AB%E9%80%9F%E5%90%AF%E5%8A%A8%E4%B8%80%E4%B8%AA%E6%9C%89ssl%E8%AF%81%E4%B9%A6%E7%9A%84wordpress%E5%8D%9A%E5%AE%A2/",
            "url": "https://sakurame.eu.org/2023/05/16/basic-theory/%E9%9D%A2%E5%90%91cloudflare%E7%9A%84%E7%BD%91%E7%AB%99%E6%90%AD%E5%BB%BA-1%E5%88%86%E9%92%9F%E5%BF%AB%E9%80%9F%E5%90%AF%E5%8A%A8%E4%B8%80%E4%B8%AA%E6%9C%89ssl%E8%AF%81%E4%B9%A6%E7%9A%84wordpress%E5%8D%9A%E5%AE%A2/",
            "title": "面向cloudflare的网站搭建,1分钟快速启动一个有ssl证书的wordpress博客",
            "date_published": "2023-05-15T16:42:17.000Z",
            "content_html": "<h1 id=\"cloudflare-tunnel-详细介绍-面向cloudflare的网站搭建1分钟快速启动一个有ssl证书的wordpress博客\"><a class=\"anchor\" href=\"#cloudflare-tunnel-详细介绍-面向cloudflare的网站搭建1分钟快速启动一个有ssl证书的wordpress博客\">#</a> cloudflare tunnel 详细介绍 —— 面向 cloudflare 的网站搭建，1 分钟快速启动一个有 ssl 证书的 wordpress 博客</h1>\n<p><strong>转载自<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmltb2VxLmNvbS9jbG91ZGZsYXJlLWFyZ28tdHVubmVsLw==\"> https://blog.imoeq.com/cloudflare-argo-tunnel/</span></strong></p>\n<h2 id=\"一-前言\"><a class=\"anchor\" href=\"#一-前言\">#</a> 一、前言</h2>\n<p>*<strong>cloudflare argo tunnel 是什么？*</strong></p>\n<p>Cloudflare Tunnel 为您提供了一种无需<strong>公共 IP</strong> 地址即可将资源连接到 Cloudflare 的安全方式。</p>\n<p>使用 Tunnel，您不会将流量发送到外部 IP — 相反，您的基础设施中的一个轻量级守护进程（  <code>cloudflared</code> ) 创建到 Cloudflare 边缘的仅出站连接。</p>\n<p>Cloudflare Tunnel 可以将 HTTP Web 服务器、 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmNsb3VkZmxhcmUuY29tL2Nsb3VkZmxhcmUtb25lL2Nvbm5lY3Rpb25zL2Nvbm5lY3QtYXBwcy91c2VfY2FzZXMvc3NoLw==\">SSH 服务器 </span>、 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9kZXZlbG9wZXJzLmNsb3VkZmxhcmUuY29tL2Nsb3VkZmxhcmUtb25lL2Nvbm5lY3Rpb25zL2Nvbm5lY3QtYXBwcy91c2VfY2FzZXMvcmRwLw==\">远程桌面 </span>和其他协议安全地连接到 Cloudflare。</p>\n<p>这样，您的源站就可以通过 Cloudflare 提供流量，而不会受到绕过 Cloudflare 的攻击。</p>\n<p>Cloudflared 在您的资源和 Cloudflare 边缘之间建立出站连接（隧道）。</p>\n<p>在同一个隧道内，你可以运行尽可能多的  <code>cloudflared</code>  根据需要处理（连接器）。</p>\n<p>这些进程将建立与 Cloudflare 边缘的连接，并将流量发送到最近的 Cloudflare 数据中心。</p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_3.png\" alt=\"img\" /></p>\n<p><strong>额，你说你看不懂？</strong></p>\n<p>上面一堆东西，说人话就是人如其名，cloudflare tunnel 就是一个<strong>内网穿透工具</strong>，类似于国内的花生壳这种</p>\n<p>但是比它好用的多</p>\n<h2 id=\"二-为什么要用cloudflare-tunnel\"><a class=\"anchor\" href=\"#二-为什么要用cloudflare-tunnel\">#</a> 二、为什么要用 cloudflare tunnel</h2>\n<p>听我跟你讲，这个好处可<strong>太多太多</strong>了</p>\n<ol>\n<li>cloudflare tunnel 是一个内网穿透工具，<strong>它不需要你的服务器暴露端口到公网</strong>，也不需要你的服务器有公网 ip 地址，只要你的<strong>设备能联网就能启动一个网站</strong>，最关键是完全免费不要钱！带宽看你服务器带宽，和其他内网穿透工具不一样的是，用它搭建的服务自动接入 cloudflare 的防御，<strong>家宽建站不是梦</strong>，而且没有任何限制。（除了 TOS，自己去看</li>\n<li>默认情况下，你无法决定 cloudflare cdn 回源方式，但是你用了 tunnel 穿透网站的方式，可以<strong>指定 http2/QUIC/http2 mux 等回源方式</strong></li>\n<li>反正都是面向 cf 建站，argo tunnel 会自动给<strong>你申请和续期 ssl 证书</strong>，这方面续期和申请的工作可以无视</li>\n<li>迁移和维护非常方便，启动也很简单</li>\n<li>不怕别人扫描你的网站，<strong>由于没有屏蔽非 CF 的 ip 访问，导致源站暴露，面临被攻击的风险</strong></li>\n<li>如果你是面向 cloudflare 建站的，<strong>argo tunnel 的性能比 nginx 要好</strong>，它高带宽和高并发的情况下，明显 argo tunnel 占用更低，不信你可以去尝试一下 1Gbps 以上的传输</li>\n<li>做站不会占用<strong>任何公网端口</strong>，你可以同时在一台服务器上同时启动<strong>多个网站</strong>，不用再考虑端口占用了</li>\n<li>启动多个实例，<strong>宕机自动切换</strong></li>\n</ol>\n<h2 id=\"三-有什么缺点\"><a class=\"anchor\" href=\"#三-有什么缺点\">#</a> 三、有什么缺点</h2>\n<p>我觉得没什么缺点，让我评价都是优点，没有不好的地方</p>\n<p>硬要说的话，就是你既然用的是 cloudflare 的内网穿透工具，那么必须把网站接入它的 CDN 才可以</p>\n<h2 id=\"四-实验环境\"><a class=\"anchor\" href=\"#四-实验环境\">#</a> 四、实验环境</h2>\n<p>您需要的东西:</p>\n<ol>\n<li>cloudflare 账户一枚</li>\n<li>托管在 cloudflare 一个域名</li>\n<li>一个<strong>完整</strong>的大脑</li>\n<li>一双没有<strong>缺陷</strong>的眼睛</li>\n<li>一张<strong>会提问</strong>的嘴巴</li>\n</ol>\n<h2 id=\"五-start-a-tunnel-with-cli\"><a class=\"anchor\" href=\"#五-start-a-tunnel-with-cli\">#</a> 五、Start a tunnel with cli</h2>\n<p>看完这小节，<strong>你可以了解如何用 cli 使用 cloudflare argo tunnel</strong></p>\n<p>这不是我们的重点，我们重点是后面 docker 那部分</p>\n<h3 id=\"1-下载cloudflared工具连接到你的cloudflare账户\"><a class=\"anchor\" href=\"#1-下载cloudflared工具连接到你的cloudflare账户\">#</a> 1、下载 cloudflared 工具，连接到你的 cloudflare 账户</h3>\n<p>这个<strong>不推荐放到服务器上获取储存凭证</strong>，因为服务器有被黑的风险，你可以放到本地 windwos、linux 都行</p>\n<p><strong>根据你的架构</strong>选择<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2Nsb3VkZmxhcmUvY2xvdWRmbGFyZWQvcmVsZWFzZXMv\"> release</span>，这里用 x86-64 的架构举例</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-o</span> /usr/bin/cloudflared <span class=\"token parameter variable\">-L</span> <span class=\"token string\">\"https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64\"</span> <span class=\"token comment\">#从 github 下载</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">chmod</span> +x /usr/bin/cloudflared <span class=\"token comment\">#给可执行权限</span></pre></td></tr></table></figure><p>如图：</p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_4.png\" alt=\"img\" /></p>\n<p>然后登陆连接你的 cloudflare 账户，需要使用 cloudflare 的 zero trust</p>\n<p>登录时<strong>随便</strong>选一个托管在 cf 的域名授权就行了</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cloudflared login</pre></td></tr></table></figure><p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_7.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_5.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_6.png\" alt=\"img\" /></p>\n<p>如果说你要迁移，就把 cert.pem 这个配置文件<strong>下载到其他机器相同的路径就行</strong>了，用其他域名也是，<strong>不需要重复授权</strong>，只需要这一次就能创建隧道</p>\n<h3 id=\"2-创建一个隧道\"><a class=\"anchor\" href=\"#2-创建一个隧道\">#</a> 2. 创建一个隧道</h3>\n<p>非常简单</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cloudflared tunnel create <span class=\"token operator\">&lt;</span>隧道名字<span class=\"token operator\">></span></pre></td></tr></table></figure><p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_8.png\" alt=\"img\" /></p>\n<p>配置文件路径在 <code>/root/.cloudflared/&lt;id&gt;.json</code></p>\n<p>这个意思就是，你现在用你获得你账户的凭证，创建了一个隧道，你可以用 <code>&lt;id&gt;.json</code>  去使用这个隧道</p>\n<h3 id=\"3-管理\"><a class=\"anchor\" href=\"#3-管理\">#</a> 3. 管理</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>COMMANDS:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>   login    Generate a configuration <span class=\"token function\">file</span> with your login details</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>   create   Create a new tunnel with given name</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>   route    Define <span class=\"token function\">which</span> traffic routed from Cloudflare edge to this tunnel: requests to a DNS hostname, to a Cloudflare Load Balancer, or traffic originating from Cloudflare WARP clients</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>   vnet     Configure and query virtual networks to manage private IP routes with overlapping IPs.</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>   run      Proxy a <span class=\"token builtin class-name\">local</span> web server by running the given tunnel</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>   list     List existing tunnels</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>   info     List details about the active connectors <span class=\"token keyword\">for</span> a tunnel</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>   delete   Delete existing tunnel by UUID or name</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   cleanup  Cleanup tunnel connections</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   token    Fetch the credentials token <span class=\"token keyword\">for</span> an existing tunnel <span class=\"token punctuation\">(</span>by name or UUID<span class=\"token punctuation\">)</span> that allows to run it</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   help, h  Shows a list of commands or <span class=\"token builtin class-name\">help</span> <span class=\"token keyword\">for</span> one <span class=\"token builtin class-name\">command</span></pre></td></tr></table></figure><p>额，这里不用多说吧，你运行 <code>cloudflared help</code>  直接看就行了</p>\n<p>值得注意的就是几个 ** <code>login</code>   <code>create</code>   <code>route</code>   <code>run</code>   <code>list</code>   <code>info</code>   <code>delete</code>   <code>token</code> **</p>\n<p>这些光看这个单词的意思就能猜出是干什么的，不用我去详细介绍</p>\n<h3 id=\"4-如何用cli去做内网穿透\"><a class=\"anchor\" href=\"#4-如何用cli去做内网穿透\">#</a> 4. 如何用 cli 去做内网穿透</h3>\n<p>上面说了哈，我们创建隧道的这个过程是可以在你内网环境下做的，不需要服务器</p>\n<p>那么我们如何其他地方使用穿透功能呢？</p>\n<p><strong>先获取你创建隧道的这个 token</strong></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cloudflared tunnel token <span class=\"token operator\">&lt;</span>隧道名称<span class=\"token operator\">></span></pre></td></tr></table></figure><p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_9.png\" alt=\"img\" /></p>\n<p>你在这里获得 token 意味着其他人有下面这串神秘代码就能使用你的隧道，<em><strong>请谨慎保管</strong></em></p>\n<p>什么，你说这样不安全？</p>\n<p>我当然知道啦，下面会介绍其他连接方式，先慢慢来搞懂 cli 再说</p>\n<p>你复制这串神秘代码后，在想要使用隧道的地方这样输入命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cloudflared tunnel --no-autoupdate run <span class=\"token parameter variable\">--token</span> <span class=\"token operator\">&lt;</span>上面那一串神秘代码<span class=\"token operator\">></span> <span class=\"token parameter variable\">--url</span> http://127.0.0.1:8080</pre></td></tr></table></figure><p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_11.png\" alt=\"img\" /> 出现这个说明连接成功</p>\n<p>这样我们的在此 8080 端口上内网服务，就会被穿透到 cf 哪里（<strong>支持设置 proxy 穿透隧道，自己 help 查看</strong>）</p>\n<p>测试网址 https://<id>.cfargotunnel.com , 你浏览器访问一下就知道了</p>\n<p><strong>那么如何绑定到我自己的域名呢</strong></p>\n<p>也非常简单，在<strong> dashboard 创建一个 cname 并开启小云朵</strong>就行了，这样 cf 就会自动把你这个域名绑定到这个隧道上面，以后你只需要访问这个域名就行了</p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_18.png\" alt=\"img\" /></p>\n<p>当然 cli 部分你权当介绍看看就行了，我们的重心不是这里，它只让你对它有个简单的了解，下面的配合 docker 使用才是真正的方便</p>\n<h2 id=\"六-start-with-docker-compose\"><a class=\"anchor\" href=\"#六-start-with-docker-compose\">#</a> 六、Start with docker-compose</h2>\n<p>这里用 cloudflared docker 启动一个 wordpress 做例子，其他也是同理，在<strong>下面</strong>给出几个常用服务的配置样例</p>\n<h3 id=\"1-安装docker-compose\"><a class=\"anchor\" href=\"#1-安装docker-compose\">#</a> 1、安装 docker-compose</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>apt/yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">docker-compose</span></pre></td></tr></table></figure><p>如果没有装过 docker，包管理器会自动给你装上 docker，毕竟是依赖的一部分</p>\n<h3 id=\"2-文件夹结构\"><a class=\"anchor\" href=\"#2-文件夹结构\">#</a> 2、文件夹结构</h3>\n<p>其实没必要用文件夹，但是为了我们以后管理方便，这里还是每个容器使用一个文件夹吧</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>blog</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>├── html</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>├── mariadb_data</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>├── cloudflared</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>│   ├── config.yaml</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>│   └── tunnel</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>│       └── id.json</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>└── docker-compose.yml</pre></td></tr></table></figure><p>解释一下</p>\n<p>html 以后放 wordpress 的文件，mariadb_data 放的是数据库文件，<strong>这俩都不需要创建</strong></p>\n<p>你创建的是 <code>cloudflared/</code>  文件夹和它的子目录 <code>tunnel/</code>  以及创建编辑 <code>config.yaml</code> ，这个是 tunnel 的配置文件，指定配置</p>\n<h3 id=\"3-docker-composeyml\"><a class=\"anchor\" href=\"#3-docker-composeyml\">#</a> 3. docker-compose.yml</h3>\n<p>这个你只需要<strong>编辑数据库那部分就行了</strong>，修改成你的密码，其他保持原样，然后保存</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>version: <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>services:</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  argo_tunnel:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    image: cloudflare/cloudflared:latest</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    volumes:      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      - ./cloudflared:/etc/cloudflared</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    command: <span class=\"token string\">'tunnel --config /etc/cloudflared/config.yaml run'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    user: root</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    depends_on:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      - wp</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  wp:</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    image: wordpress:latest</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    volumes:</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      - ./html/:/var/www/html</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    depends_on:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      - mariadb_wp</pre></td></tr><tr><td data-num=\"20\"></td><td><pre> </pre></td></tr><tr><td data-num=\"21\"></td><td><pre>  mariadb_wp:</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    image: mariadb:latest</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>       MYSQL_ROOT_PASSWORD: <span class=\"token number\">123456789</span> <span class=\"token comment\">#数据库 root 密码</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>       MYSQL_DATABASE: wordpress <span class=\"token comment\">#数据库名称</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>       MYSQL_USER: root <span class=\"token comment\">#建议用 root</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>       MYSQL_PASSWORD: <span class=\"token number\">123456789</span> <span class=\"token comment\">#数据库密码</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    volumes:</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      - ./mariadb_data:/var/lib/mysql</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    command: mysqld  --character-set-server<span class=\"token operator\">=</span>utf8mb4 --collation-server<span class=\"token operator\">=</span>utf8mb4_unicode_ci</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    privileged: <span class=\"token boolean\">true</span></pre></td></tr></table></figure><h3 id=\"4-配置cloudflared-configyaml\"><a class=\"anchor\" href=\"#4-配置cloudflared-configyaml\">#</a> 4. 配置 cloudflared config.yaml</h3>\n<p>其实也很简单</p>\n<p>首先把上面创建隧道生成的那个 <code>&lt;id&gt;.json</code>  下载下来，上传到服务器文件夹里 <code>./cloudflared/tunnel/</code></p>\n<p>记得改名成 <code>id.json</code></p>\n<p>config.yaml</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tunnel: <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>credentials-file: /etc/cloudflared/tunnel/id.json</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>protocol: quic</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ingress:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>- hostname: blog_tunnel.test.xyz</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  service: http://wp:80</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- service: http_status:404</pre></td></tr></table></figure><p>解释一下</p>\n<p><code>tunnel</code> :<id>就是你隧道的那个 id，粘贴上，不需要双引号比如 123156465-456adwada456dwad-dawdawd</p>\n<p><code>credentials-file</code> : 不需要你动</p>\n<p><code>protocol</code> : 可选项 <code>&lt;auto/quic/http2/h2mux&gt;</code> , auto 默认 quic, 使用 quic 回源时，对性能占用往往很高，如果没有很变态的延迟要求的人，建议用 http2 和 h2mux，h2mux 你可以理解为多通道的意思，实测这俩区别不大（如果你禁用了 udp 也是不能用 quic 的注意啦）</p>\n<p><code>ingress</code> : 相当于入站规则 hostname 是绑定到这个隧道的 cf 托管域名，这个 tunnel 不会自动添加，<strong>你需要 cli 那一步去 dashboard 手动添加</strong> 最后一个 <code>service: http_status:404</code> ，这个必须得加，<strong>有个收尾规则</strong>，你可以吧 404 改成 666 或者 123，那无所谓</p>\n<p><strong>如果说你要用 SaaS 的域名接入 cf</strong>，则是</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>tunnel: <span class=\"token operator\">&lt;</span>id<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>credentials-file: /etc/cloudflared/tunnel/id.json</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>protocol: quic</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ingress:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>- hostname: blog_tunnel.test.xyz</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  service: http://wp:80</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>- hostname: blog_tunnel.test.com <span class=\"token comment\">#你的 SaaS 接入的域名</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  service: http://wp:80</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>- service: http_status:404</pre></td></tr></table></figure><p>这也是为什么要用配置文件启动<strong> tunnel 的原因，因为用命令行指定 SaaS 域名太麻烦了</strong></p>\n<h3 id=\"5-docker-compose管理\"><a class=\"anchor\" href=\"#5-docker-compose管理\">#</a> 5. docker-compose 管理</h3>\n<p>启动</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker-compose</span> up <span class=\"token parameter variable\">-d</span></pre></td></tr></table></figure><p>查看日志</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker-compose</span> logs <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">--tail</span><span class=\"token operator\">=</span><span class=\"token number\">30</span></pre></td></tr></table></figure><p>停止</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker-compose</span> down</pre></td></tr></table></figure><p>迁移</p>\n<p>把这个 blog / 文件夹打包直接拷走到其他服务器重启启动就行了，因为自动证书，所以啥也不用管就能启动，你就说方便不方便 ba</p>\n<h3 id=\"6-启动博客\"><a class=\"anchor\" href=\"#6-启动博客\">#</a> 6. 启动博客</h3>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_12.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_13.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_14.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_15.png\" alt=\"img\" /></p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_16.png\" alt=\"img\" /></p>\n<p>额，没了就这点，简单吧哈哈哈哈，<strong>是不是比你从零开始编译环境方便？</strong></p>\n<h3 id=\"demo\"><a class=\"anchor\" href=\"#demo\">#</a> DEMO</h3>\n<p>环境: <strong>家宽 CT，QUIC 回源直连，无代理</strong></p>\n<p>锐角云 windows 上装的 VMware，上面虚拟化的 debian，启动的 docker 容器【究级套娃】</p>\n<p><a href=\"https://blog.moer.eu.org\"><strong>blog.moer.eu.org</strong></a></p>\n<h2 id=\"七-其他服务示例\"><a class=\"anchor\" href=\"#七-其他服务示例\">#</a> 七、其他服务示例</h2>\n<h3 id=\"bitwarden\"><a class=\"anchor\" href=\"#bitwarden\">#</a> bitwarden</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre> </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">argo_tunnel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> cloudflare/cloudflared<span class=\"token punctuation\">:</span>latest</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>      </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./cloudflared<span class=\"token punctuation\">:</span>/etc/cloudflared</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'tunnel --config /etc/cloudflared/config.yaml run'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token punctuation\">-</span> bw</pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token key atrule\">bw</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> vaultwarden/server<span class=\"token punctuation\">:</span>latest</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token key atrule\">DOMAIN</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'https://bwh.test.com/'</span> <span class=\"token comment\">#你 cf 绑定的自己域名</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token key atrule\">SIGNUPS_ALLOWED</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'false'</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token key atrule\">WEBSOCKET_ENABLED</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token key atrule\">SMTP_HOST</span><span class=\"token punctuation\">:</span> smtp.office365.com <span class=\"token comment\">#smtp 设置</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      <span class=\"token key atrule\">SMTP_FROM</span><span class=\"token punctuation\">:</span> admin@test.com <span class=\"token comment\">#邮箱</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      <span class=\"token key atrule\">SMTP_PORT</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'587'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>      <span class=\"token key atrule\">SMTP_SSL</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'true'</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token key atrule\">SMTP_USERNAME</span><span class=\"token punctuation\">:</span> admin@test.com</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>      <span class=\"token key atrule\">SMTP_PASSWORD</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"TTTTTEST\"</span> <span class=\"token comment\">#密码</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>      <span class=\"token key atrule\">SMTP_AUTH_MECHANISM</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Login\"</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./b/data<span class=\"token punctuation\">:</span>/data</pre></td></tr></table></figure><h3 id=\"alist\"><a class=\"anchor\" href=\"#alist\">#</a> alist</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">argo_tunnel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> cloudflare/cloudflared</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./cloudflared<span class=\"token punctuation\">:</span>/etc/cloudflared</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'tunnel --config /etc/cloudflared/config.yaml run'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> alistv3</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">alistv3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> xhofe/alist</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./alistv3/data<span class=\"token punctuation\">:</span>/opt/alist/data</pre></td></tr></table></figure><h3 id=\"emby\"><a class=\"anchor\" href=\"#emby\">#</a> emby</h3>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"3\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">services</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">argo_tunnel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> cloudflare/cloudflared</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>      </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./cloudflared<span class=\"token punctuation\">:</span>/etc/cloudflared</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'tunnel --config /etc/cloudflared/config.yaml run'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      <span class=\"token punctuation\">-</span> emby</pre></td></tr><tr><td data-num=\"12\"></td><td><pre> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>  <span class=\"token key atrule\">emby</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> lscr.io/linuxserver/emby<span class=\"token punctuation\">:</span>latest</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">environment</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token punctuation\">-</span> PUID=1000</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">-</span> PGID=1000</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>      <span class=\"token punctuation\">-</span> TZ=Europe/London</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./emby_config<span class=\"token punctuation\">:</span>/config</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./rclone/hentai_data/anime<span class=\"token punctuation\">:</span>/data/hanime</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr></table></figure><p>其他服务实例<strong>欢迎放到评论区</strong>，供给大家参考</p>\n<h2 id=\"八-你知道吗\"><a class=\"anchor\" href=\"#八-你知道吗\">#</a> 八、你知道吗？</h2>\n<h3 id=\"1tunnel不止可以穿透http服务\"><a class=\"anchor\" href=\"#1tunnel不止可以穿透http服务\">#</a> 1.tunnel 不止可以穿透 http 服务</h3>\n<p>它可以穿透所有 TCP 协议，使用方法也很简单</p>\n<p>把 config.yaml 修改一下就行了，比如</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>service: tcp://127.0.0.1:8888</pre></td></tr></table></figure><p><img data-src=\"https://img.imoeq.com/i/2023/02/23/image_17.png\" alt=\"img\" /></p>\n<h3 id=\"2-可以在cloudflare-zero-trust面板管理你的tunnel\"><a class=\"anchor\" href=\"#2-可以在cloudflare-zero-trust面板管理你的tunnel\">#</a> 2. 可以在 cloudflare zero trust 面板管理你的 tunnel</h3>\n<p>这个面板也可以添加隧道不只是用命令行创建</p>\n<p><img data-src=\"https://img.imoeq.com/i/2023/02/23/Screenshot_1.png\" alt=\"img\" /></p>\n<h3 id=\"3-用一个隧道可以同时被其他机器启动\"><a class=\"anchor\" href=\"#3-用一个隧道可以同时被其他机器启动\">#</a> 3. 用一个隧道可以同时被其他机器启动</h3>\n<p>cf 会优先选择第一时间启动的机器作为主节点，当主节点 down 掉后会自动切换的其他节点，这个是按照启动的顺序决定的</p>\n<h3 id=\"4-tunnel一个帐号有创建的数量限制\"><a class=\"anchor\" href=\"#4-tunnel一个帐号有创建的数量限制\">#</a> 4. tunnel 一个帐号有创建的数量限制</h3>\n<p>但是我记得数量限制一个人是用不完的，不用担心，具体数量忘了</p>\n<h2 id=\"九-常见问题\"><a class=\"anchor\" href=\"#九-常见问题\">#</a> 九、常见问题</h2>\n<p>TG 群:<span class=\"exturl\" data-url=\"aHR0cHM6Ly90Lm1lL2ltb2VxX2dyb3Vw\"> https://t.me/imoeq_group</span></p>\n<p>上一个群管理员帐号被杜叔叔给封了，无法解封，所以新创建一个</p>\n<p>创建个群的目的是为了，<strong>不给</strong>一些小白解决问题</p>\n<p>短短一篇博文是无法解释清楚所有问题的，如果你有其他问题，请加群问群友，或者发邮件联系作者</p>\n<h3 id=\"1我可以用家宽建站吗\"><a class=\"anchor\" href=\"#1我可以用家宽建站吗\">#</a> 1. 我可以用家宽建站吗？</h3>\n<p>为什么不能呢？</p>\n<p>关于家宽建站这方面，argo tunnel 可以<strong>在连接时指定代理地址</strong>，所以只能你的梯子还能用，你还能访问谷歌，那么就能使用 tunnel 穿透</p>\n<p>具体的配置我没有直接在博客里放出来，你可以去 cloudflare argo tunnel docs 里面去查询<strong>连接时代理配置项</strong></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">--proxy-address value                        Listen address for the proxy. (default</span><span class=\"token punctuation\">:</span> \"127.0.0.1\") <span class=\"token punctuation\">[</span>$TUNNEL_PROXY_ADDRESS<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre> <span class=\"token key atrule\">--proxy-port value                           Listen port for the proxy. (default</span><span class=\"token punctuation\">:</span> 0) <span class=\"token punctuation\">[</span>$TUNNEL_PROXY_PORT<span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>就是在配置时启动时指定 socks5 地址和端口，比如</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">argo_tunnel</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> cloudflare/cloudflared<span class=\"token punctuation\">:</span>latest</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">volumes</span><span class=\"token punctuation\">:</span>      </pre></td></tr><tr><td data-num=\"4\"></td><td><pre>      <span class=\"token punctuation\">-</span> ./cloudflared<span class=\"token punctuation\">:</span>/etc/cloudflared</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token key atrule\">restart</span><span class=\"token punctuation\">:</span> always</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token key atrule\">command</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'tunnel --config /etc/cloudflared/config.yaml --proxy-address 127.0.0.1 --proxy-port 10808 run'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">user</span><span class=\"token punctuation\">:</span> root</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token key atrule\">depends_on</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token punctuation\">-</span> bw</pre></td></tr></table></figure><h3 id=\"2-国内能用吗\"><a class=\"anchor\" href=\"#2-国内能用吗\">#</a> 2. 国内能用吗？</h3>\n<p>不要问我，去问长城防火墙</p>\n<h3 id=\"3-我能转载吗\"><a class=\"anchor\" href=\"#3-我能转载吗\">#</a> 3. 我能转载吗？</h3>\n<p>可以，但是要表明出处，我码一篇文章要好几个小时，你直接 copy 走了，以后就放弃分享了</p>\n<h3 id=\"4-速度咋样\"><a class=\"anchor\" href=\"#4-速度咋样\">#</a> <strong>4. 速度咋样？</strong></h3>\n<p>取决于你本地到 CF 的速度，以及用户到 CF 的速度</p>\n<p>如果说你服务器位于非中国大陆，则完全不需要担心</p>\n<p>中国大陆的话，建议外面套一层代理去让 CF 回源</p>\n<p>然后客户访问 CF 这部分就仁者见仁，智者见智了</p>\n<p>由于可以指定 QUIC 回源，比起传统 CDN 回源方式肯定要好不少，至少延迟方面要有优势</p>\n<h3 id=\"5-其他问题暂时没想起来\"><a class=\"anchor\" href=\"#5-其他问题暂时没想起来\">#</a> 5. 其他问题暂时没想起来...</h3>\n<h2 id=\"十-碎碎念要饭\"><a class=\"anchor\" href=\"#十-碎碎念要饭\">#</a> 十、碎碎念 + 要饭</h2>\n<p>建站时无论啥时候都会开启 CF，所以我直接选择隧道穿透的方式</p>\n<p>希望看到这篇教程人，你能善良，不要去滥用这个服务</p>\n<p>码一篇这样的文章很麻烦，又要考虑读者哪里容易搞错，哪里有问题</p>\n<p>本来想几分钟写完，不知不觉就花了两个小时了，心累</p>\n<p><img data-src=\"https://blog.imoeq.com/wp-content/uploads/2022/01/74051228.jpg\" alt=\"admin\" /></p>\n<iframe style=\"top: 0px; left: 0px; border: medium none; visibility: hidden; --darkreader-inline-border-top: currentcolor; --darkreader-inline-border-right: currentcolor; --darkreader-inline-border-bottom: currentcolor; --darkreader-inline-border-left: currentcolor;\" data-darkreader-inline-border-top=\"\" data-darkreader-inline-border-right=\"\" data-darkreader-inline-border-bottom=\"\" data-darkreader-inline-border-left=\"\" width=\"1\" height=\"1\"></iframe>\n",
            "tags": [
                "建站"
            ]
        }
    ]
}